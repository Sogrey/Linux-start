(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{361:function(a,s,e){"use strict";e.r(s);var t=e(14),n=Object(t.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"bzip2-将文件压缩成bz2格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bzip2-将文件压缩成bz2格式"}},[a._v("#")]),a._v(" bzip2 - 将文件压缩成bz2格式")]),a._v(" "),s("p",[a._v("bzip2命令 用于创建和管理（包括解压缩）“.bz2”格式的压缩包。")]),a._v(" "),s("p",[a._v("bzip2 采用 Burrows-Wheeler 块排序文本压缩算法和 Huffman 编码方式压缩文件。 压缩率一般比基于 LZ77/LZ78 的压缩软件好得多，其性能接近 PPM 族统计类压缩软件。")]),a._v(" "),s("p",[a._v("命令行参数有意设计为非常接近 GNU gzip 的形式，但也不完全相同。")]),a._v(" "),s("p",[a._v('bzip2 从命令行读入文件名和参数。 每个文件被名为 "原始文件名.bz2" 的压缩文件替换。 每个压缩文件具有与原文件相同的修改时间、 权限， 如果可能的话，还具有相同的属主， 因此在解压缩时这些特性将正确地恢复。 在某些文件系统中， 没有权限、 属主或时间的概念， 或者对文件名的长度有严格限制， 例如 MSDOS，在这种情况下，bzip2 没有保持原文件名、 属主、 权限以及时间的机制， 从这个意义上说，bzip2 对文件名的处理是幼稚的。')]),a._v(" "),s("p",[a._v("bzip2 和 bunzip2 在缺省情况下不覆盖已有的文件。 如果想覆盖已有的文件，要指定 -f 选项。")]),a._v(" "),s("p",[a._v("如果未指定文件名， bzip2 将压缩来自标准输入的数据并写往标准输出。在这种情况下， bzip2 会拒绝将压缩结果写往终端，因为这完全无法理解并且是没有意义的。")]),a._v(" "),s("p",[a._v("bunzip2 (以及 bzip2 -d) 对所有指定的文件进行解压缩处理。不是由 bzip2 产生的文件将被忽略，同时发出一个警告信息。 bzip2 按下列方式由压缩文件名确定解压后的文件名：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("filename.bz2    解压成   filename\nfilename.bz     解压成   filename\nfilename.tbz2   解压成   filename.tar\nfilename.tbz    解压成   filename.tar\nanyothername    解压成   anyothername.out\n")])])]),s("p",[a._v("如果文件名的后缀不是下列之一： .bz2, .bz, .tbz2 或 .tbz, .bzip2 将抱怨无法确定原始文件名，并采用原文件名加 .out 作为解压缩文件名。")]),a._v(" "),s("p",[a._v("在压缩时，如果不提供文件名，bzip2 将从标准输入读取数据，压缩结果写往标准输出。")]),a._v(" "),s("p",[a._v("bzip2 采用 32 位 CRC 校验码作自我检查，以确认解压后的文件与原始文件相同。 这可用于检测压缩文件是否损坏，并防止 bzip2 中未知的缺陷（运气好的话这种可能性非常小）。 数据损坏而未检测到的几率非常之小， 对于每个被处理的文件大约是四十亿分之一。 检查是在解压缩时进行的，因此它只能说明某个地方出问题了。 它能帮助恢复原始未压缩的数据。可以用 bzip2recover 来尝试从损坏的文件中恢复数据。")]),a._v(" "),s("p",[a._v("返回值：正常退出返回 0， 出现环境问题返回 1 （文件未找到，非法的选项，I/O错误等）， 返回 2 表明压缩文件损坏，出现导致 bzip2 紧急退出的内部一致性错误（例如缺陷）时返回 3。")]),a._v(" "),s("h2",{attrs:{id:"适用范围"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#适用范围"}},[a._v("#")]),a._v(" 适用范围")]),a._v(" "),s("div",{staticClass:"svg redhat"},[a._v("RedHat")]),a._v(" "),s("div",{staticClass:"svg rhel"},[a._v("RHEL")]),a._v(" "),s("div",{staticClass:"svg ubuntu"},[a._v("Ubuntu")]),a._v(" "),s("div",{staticClass:"svg centos"},[a._v("CentOS")]),a._v(" "),s("div",{staticClass:"svg debian"},[a._v("Debian")]),a._v(" "),s("div",{staticClass:"svg deepin"},[a._v("Deepin")]),a._v(" "),s("div",{staticClass:"svg suse"},[a._v("SUSE")]),a._v(" "),s("div",{staticClass:"svg opensuse"},[a._v("openSUSE")]),a._v(" "),s("div",{staticClass:"svg fedora"},[a._v("Fedora")]),a._v(" "),s("div",{staticClass:"svg linuxmint"},[a._v("Linux Mint")]),a._v(" "),s("div",{staticClass:"svg alpinelinux"},[a._v("Alpine Linux")]),a._v(" "),s("div",{staticClass:"svg archlinux"},[a._v("Arch Linux")]),a._v(" "),s("h2",{attrs:{id:"语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[a._v("#")]),a._v(" 语法")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bzip2")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-cdfkqstvzVL123456789")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" filenames "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),s("h2",{attrs:{id:"选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[a._v("#")]),a._v(" 选项")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--stdout")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将数据压缩或解压缩至标准输出。")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--decompress")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 强制解压缩。 bzip2, bunzip2 以及 bzcat 实际上是同一个程序，进行何种操作将根据程序名确定。  指定该选项后将不考虑这一机制，强制 bzip2 进行解压缩。")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-z")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--compress")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -d 选项的补充：强制进行压缩操作，而不管执行的是哪个程序。")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--test")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 检查指定文件的完整性，但并不对其解压缩。 实际上将对数据进行实验性的解压缩操作，而不输出结果。")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--force")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 强制覆盖输出文件。通常 bzip2 不会覆盖已经存在的文件。该选项还强制 bzip2 打破文件的硬连接，缺省情况下 bzip2 不会这么做。")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-k")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--keep")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在压缩或解压缩时保留输入文件（不删除这些文件）。")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--small")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在压缩、解压缩及检查时减少内存用量。采用一种修正的算法进行压缩和测试，每个数据块仅需要 2.5 个字节。这意味着任何文件都可以在 2300k")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 的内存中进行解压缩， 尽管速度只有通常情况下的一半。")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在压缩时，-s将选定 200k 的块长度，内存用量也限制在 200k 左右， 代价是压缩率会降低。 总之，如果机器的内存较少（8兆字节或更少），")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 可对所有操作都采用-s选项。参见下面的内存管理。")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-q")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--quiet")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 压制不重要的警告信息。属于 I/O 错误及其它严重事件的信息将不会被压制。")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--verbose")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 详尽模式 -- 显示每个被处理文件的压缩率。 命令行中更多的 -v 选项将增加详细的程度， 使 bzip2 显示出许多主要用于诊断目的信息。")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-L")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--license")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-V")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示软件版本，许可证条款及条件。")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-1")]),a._v(" to "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-9")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在压缩时将块长度设为 100 k、200 k ..  900 k。 对解压缩没有影响。参见下面的内存管理。")]),a._v("\n\n-- "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v('# 将所有后面的命令行变量看作文件名，即使这些变量以减号"-"打头。 可用这一选项处理以减号"-"打头的文件名， 例如：bzip2 -- -myfilename.')]),a._v("\n\n--repetitive-fast --repetitive-best\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 这些选项在 0.9.5 及其以上版本中是多余的。 在较早的版本中，这两个选项对排序算法的行为提供了一些粗糙的控制，有些情况下很有用。 0.9.5")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 及其以上版本采用了改进的算法而与这些选项无关。")]),a._v("\n")])])]),s("h2",{attrs:{id:"举例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#举例"}},[a._v("#")]),a._v(" 举例")]),a._v(" "),s("p",[s("strong",[a._v("压缩指定文件filename")]),a._v(":")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bzip2")]),a._v(" filename\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 或")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bzip2")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-z")]),a._v(" filename\n")])])]),s("p",[a._v("这里，压缩的时候不会输出，会将原来的文件filename给删除，替换成filename.bz2.如果以前有filename.bz2则不会替换并提示错误（如果想要替换则指定-f选项，例如bzip2 -f filename；如果filename是目录则也提醒错误不做任何操作；如果filename已经是压过的了有bz2后缀就提醒一下，不再压缩，没有bz2后缀会再次压缩。")]),a._v(" "),s("p",[s("strong",[a._v("解压指定的文件filename.bz2")]),a._v(":")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bzip2")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" filename.bz2\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 或")]),a._v("\nbunzip2 filename.bz2\n")])])]),s("p",[a._v("这里，解压的时候没标准输出，会将原来的文件filename.bz2给替换成filename。如果以前有filename则不会替换并提示错误（如果想要替换则指定-f选项，例如bzip2 -df filename.bz2。")]),a._v(" "),s("p",[s("strong",[a._v("压缩解压的时候将结果也输出")]),a._v("：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bzip2")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" filename\n")])])]),s("p",[a._v("输入之后，输出如下：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("filename:  0.119:1, 67.200 bits/byte, -740.00% saved, 5 in, 42 out.\n")])])]),s("p",[a._v("这里，加上-v选项就会输出了,只用压缩举例了，解压的时候同理bzip2 -dv filename.bz2不再举例了。")]),a._v(" "),s("p",[s("strong",[a._v("模拟解压实际并不解压")]),a._v("：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bzip2")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-tv")]),a._v(" filename.bz2\n")])])]),s("p",[a._v("输入之后，输出如下：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("filename.bz2: ok\n")])])]),s("p",[a._v('这里，-t指定要进行模拟解压，不实际生成结果，也就是说类似检查文件,当然就算目录下面有filename也不会有什么错误输出了，因为它根本不会真的解压文件。为了在屏幕上输出，这里加上-v选项了,如果是真的解压bzip2 -dv filename.bz2则输出的是把"ok"替换成了"done"。')]),a._v(" "),s("p",[s("strong",[a._v("压缩解压的时候，除了生成结果文件，将原来的文件也保存")]),a._v(":")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bzip2")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-k")]),a._v(" filename\n")])])]),s("p",[a._v("这里，加上-k就保存原始的文件了，否则原始文件会被结果文件替代。只用压缩举例了，解压的时候同理$bzip2 -dk filename.bz2不再举例了。")]),a._v(" "),s("p",[s("strong",[a._v("解压到标准输出")]),a._v("：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bzip2")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-dc")]),a._v(" filename.bz2\n")])])]),s("p",[a._v("输入之后，输出如下：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("hahahhaahahha\n")])])]),s("p",[a._v("这里，使用-c指定到标准输出，输出的是文件filename的内容，不会将filename.bz2删除。")]),a._v(" "),s("p",[s("strong",[a._v("压缩到标准输出")]),a._v("：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bzip2")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" filename\nbzip2: I won"),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'t write compressed data to a terminal.\nbzip2: For help, type: `bzip2 --help'")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n")])])]),s("p",[a._v("这里，使用-c指定压缩到标准输出不删除原有文件，不同的是，压缩后的文件无法输出到标准输出。")]),a._v(" "),s("p",[s("strong",[a._v("使用bzip2的时候将所有后面的看作文件(即使文件名以'-'开头)")]),a._v("：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bzip2")]),a._v(" -- "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-myfilename")]),a._v("\n")])])]),s("p",[a._v("这里主要是为了防止文件名中-产生以为是选项的歧义。")])])}),[],!1,null,null,null);s.default=n.exports}}]);