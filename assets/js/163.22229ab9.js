(window.webpackJsonp=window.webpackJsonp||[]).push([[163],{480:function(s,a,t){"use strict";t.r(a);var n=t(14),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"killall-使用进程的名称来杀死一组进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#killall-使用进程的名称来杀死一组进程"}},[s._v("#")]),s._v(" killall - 使用进程的名称来杀死一组进程")]),s._v(" "),a("p",[s._v("killall命令 使用进程的名称来杀死进程，使用此指令可以杀死一组同名进程。我们可以使用kill命令杀死指定进程PID的进程，如果要找到我们需要杀死的进程，我们还需要在之前使用ps等命令再配合grep来查找进程，而killall把这两个过程合二为一，是一个很好用的命令。")]),s._v(" "),a("p",[s._v("killall可以根据名字来杀死进程，它会给指定名字的所有进程发送信息。如果没有指定信号名，则发送SIGTERM。信号可以通过名称(例如-HUP或-SIGHUP)或数字(例如-1)或选项-s来指定。如果命令名不是正则表达式(选项-r)，并且包含斜杠(/)，则将选择执行该特定文件的进程，与其名称无关。如果每个列出的命令至少有一个进程被杀死，或者没有列出命令，并且至少有一个进程符合-u和-Z搜索条件，则KILLALL返回一个零返回代码。否则KILLALL返回非零。KILLALL进程永远不会杀死自己(但可能会杀死其他KILLALL进程)。")]),s._v(" "),a("h2",{attrs:{id:"适用范围"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#适用范围"}},[s._v("#")]),s._v(" 适用范围")]),s._v(" "),a("div",{staticClass:"svg redhat"},[s._v("RedHat")]),s._v(" "),a("div",{staticClass:"svg rhel"},[s._v("RHEL")]),s._v(" "),a("div",{staticClass:"svg ubuntu"},[s._v("Ubuntu")]),s._v(" "),a("div",{staticClass:"svg centos"},[s._v("CentOS")]),s._v(" "),a("div",{staticClass:"svg debian"},[s._v("Debian")]),s._v(" "),a("div",{staticClass:"svg deepin"},[s._v("Deepin")]),s._v(" "),a("div",{staticClass:"svg suse"},[s._v("SUSE")]),s._v(" "),a("div",{staticClass:"svg opensuse"},[s._v("openSUSE")]),s._v(" "),a("div",{staticClass:"svg fedora"},[s._v("Fedora")]),s._v(" "),a("div",{staticClass:"svg linuxmint"},[s._v("Linux Mint")]),s._v(" "),a("div",{staticClass:"svg alpinelinux"},[s._v("Alpine Linux")]),s._v(" "),a("div",{staticClass:"svg archlinux"},[s._v("Arch Linux")]),s._v(" "),a("h2",{attrs:{id:"语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[s._v("#")]),s._v(" 语法")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("killall")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OPTION"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),a("h2",{attrs:{id:"选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[s._v("#")]),s._v(" 选项")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("-e, "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--exact")]),s._v("              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进程需要和名字完全相符")]),s._v("\n-I, --ignore-case        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 忽略大小写")]),s._v("\n-g, --process-group      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 结束进程组")]),s._v("\n-i, "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--interactive")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 结束之前询问")]),s._v("\n-l, "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--list")]),s._v("               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出所有的信号名称")]),s._v("\n-q, "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--quite")]),s._v("              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进程没有结束时，不输出任何信息")]),s._v("\n-r, "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--regexp")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将进程名模式解释为扩展的正则表达式。")]),s._v("\n-s, "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--signal")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 发送指定信号")]),s._v("\n-u, "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--user")]),s._v("               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 结束指定用户的进程")]),s._v("\n-v, "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--verbose")]),s._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示详细执行过程")]),s._v("\n-w, "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--wait")]),s._v("               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 等待所有的进程都结束")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--help")]),s._v("                           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示帮助文档")]),s._v("\n-V, "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--version")]),s._v("                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示命令版本信息")]),s._v("\n")])])]),a("h2",{attrs:{id:"举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#举例"}},[s._v("#")]),s._v(" 举例")]),s._v(" "),a("p",[s._v("结束所有进程")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看进程，有3个wc进程")]),s._v("\n  PID TTY          TIME CMD\n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8266")]),s._v(" pts/0    00:00:00 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9781")]),s._v(" pts/0    00:00:00 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wc")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9784")]),s._v(" pts/0    00:00:00 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wc")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9785")]),s._v(" pts/0    00:00:00 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wc")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9786")]),s._v(" pts/0    00:00:00 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("killall")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-9")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wc")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#结束所有的wc进程")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看进程，wc都被杀死")]),s._v("\n  PID TTY          TIME CMD\n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8266")]),s._v(" pts/0    00:00:00 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9788")]),s._v(" pts/0    00:00:00 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("   已杀死               "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nice")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wc")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("-  已杀死               "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nice")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wc")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("+  已杀死               "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nice")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wc")]),s._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);