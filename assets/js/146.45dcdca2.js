(window.webpackJsonp=window.webpackJsonp||[]).push([[146],{464:function(t,s,n){"use strict";n.r(s);var a=n(14),e=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"indent-格式化c语言的源文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#indent-格式化c语言的源文件"}},[t._v("#")]),t._v(" indent - 格式化C语言的源文件")]),t._v(" "),s("p",[t._v("indent命令 可辨识C的原始代码文件，并加以格式化，以方便程序员阅读、修改等操作。")]),t._v(" "),s("h2",{attrs:{id:"适用范围"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#适用范围"}},[t._v("#")]),t._v(" 适用范围")]),t._v(" "),s("div",{staticClass:"svg redhat"},[t._v("RedHat")]),t._v(" "),s("div",{staticClass:"svg rhel"},[t._v("RHEL")]),t._v(" "),s("div",{staticClass:"svg ubuntu"},[t._v("Ubuntu")]),t._v(" "),s("div",{staticClass:"svg centos"},[t._v("CentOS")]),t._v(" "),s("div",{staticClass:"svg debian"},[t._v("Debian")]),t._v(" "),s("div",{staticClass:"svg deepin"},[t._v("Deepin")]),t._v(" "),s("div",{staticClass:"svg suse"},[t._v("SUSE")]),t._v(" "),s("div",{staticClass:"svg opensuse"},[t._v("openSUSE")]),t._v(" "),s("div",{staticClass:"svg fedora"},[t._v("Fedora")]),t._v(" "),s("div",{staticClass:"svg linuxmint"},[t._v("Linux Mint")]),t._v(" "),s("div",{staticClass:"svg alpinelinux"},[t._v("Alpine Linux")]),t._v(" "),s("div",{staticClass:"svg archlinux"},[t._v("Arch Linux")]),t._v(" "),s("h2",{attrs:{id:"语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("indent  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("选项"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("源文件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \nindent  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("选项"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("源文件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-o 目标文件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("h2",{attrs:{id:"选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[t._v("#")]),t._v(" 选项")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("-bad：                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在声明区加上空白行；")]),t._v("\n-bap：                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加空白行；")]),t._v("\n-bbb：                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在注释后面添加空白行；")]),t._v("\n-bc：                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在声明段中，如果出现逗号就换行；")]),t._v("\n-bl：                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# if（或是else、for等）与后面执行区段的“{”不同行，且“}”")]),t._v("\n                         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 自成一行-bli<缩排格数>设置{}缩排的格数；")]),t._v("\n-br：                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# if（或是else、for等）与后面执行区段的“{”同行，且“}”自成一行；")]),t._v("\n-bs：                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  在sizeof之后空一格；")]),t._v("\n-c"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("栏数"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("：               "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  将注释置于程序右侧指定的栏位；")]),t._v("\n-cd"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("栏数"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("：              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  将注释置于声明右侧指定的栏位；")]),t._v("\n-cdb：                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  注释符号自成一行；")]),t._v("\n-ce：                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将else置于“}”（if执行区段的结尾）之后；")]),t._v("\n-ci："),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("缩排格数"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("：        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  叙述过长而换行时，指定换行后缩排的格数；")]),t._v("\n-cli"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("缩排格数"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("：         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   使用case时，switch缩排的格数；")]),t._v("\n-cp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("栏数"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("：              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将注释置于else与elseif叙述右侧指定的栏位；")]),t._v("\n-cs：                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在case之后空一格；")]),t._v("\n-d"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("缩排格数"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("：           "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  针对不是放在程序码右侧的注释，设置其缩排格数；")]),t._v("\n-di"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("栏数"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("：              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将声明区段的变量置于指定的栏位；")]),t._v("\n-fc1：                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 针对放在每行最前端的注释，设置其格式；")]),t._v("\n-fca：                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置所有注释的格式；")]),t._v("\n-gnu：                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用指定的GNU格式，该参数为默认值；")]),t._v("\n-i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("格数"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("：               "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  设置缩排的格数；")]),t._v("\n-ip"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("格数"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("：              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  设置参数的缩排格数；")]),t._v("\n-kr：                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  指定使用Kernighan&Ritchie的格式；")]),t._v("\n-lp：                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  叙述过长而换行，且叙述中包含了括号时，")]),t._v("\n                         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  将括号中的每行起始栏位内容垂直对其排列；")]),t._v("\n-nbad：                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  在声明区段后不要加上空白行；")]),t._v("\n-nbap：                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  在程序后面不添加空白行；")]),t._v("\n-nbbb：                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  在注释段后面不添加空白行；")]),t._v("\n-nbc：                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  在声明段中，即使出现逗号，也不换行；")]),t._v("\n-ncdb：                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  注释符号不自成一行；")]),t._v("\n-nce：                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  不将else置于“}”后面；")]),t._v("\n-ncs：                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  不在case后面空一格；")]),t._v("\n-nfc1：                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  不要格式化放在每行最前端的注释；")]),t._v("\n-nfca：                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  不用格式化任何的注释；")]),t._v("\n-nip：                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  参数不要缩排；")]),t._v("\n-nlp：                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  叙述过长而换行，且叙述中包含了括号时，")]),t._v("\n                         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  不用将括号中的每行起始栏位垂直对其排列；")]),t._v("\n-npcs：                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  在调用函数名之后，不要添加空格；")]),t._v("\n-npro：                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  不要读取indent的配置文件“.indent.pro”；")]),t._v("\n-npsl：                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  程序类型与程序名称放在同一行；")]),t._v("\n-nsc：                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  注释左侧不要添加星号；")]),t._v("\n-nsob：                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  不用处理多余的空白行；")]),t._v("\n-nss：                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  若for或while区段仅有一行时，在分号前不加空格；")]),t._v("\n-nv：                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  不显示详细的信息；")]),t._v("\n-orig：                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  使用berkeley格式；")]),t._v("\n-pcs：                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  在调用函数名与“{”之间添加空格；")]),t._v("\n-psl：                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  程序类型置于程序名称的前一行；")]),t._v("\n-sc：                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  在每行注释左侧添加星号；")]),t._v("\n-sob：                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  删除多余的空白行；")]),t._v("\n-ss：                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  若for或swile区段仅有一行时，在分号前加上空格；")]),t._v("\n-st：                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  将结果显示在标准输出设备上；")]),t._v("\n-T：                     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  数据类型名称缩排；")]),t._v("\n-ts"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("格数"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("：              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  设置tab的长度； ")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--help")]),t._v("                           "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示帮助文档")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--version")]),t._v("                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示命令版本信息")]),t._v("\n")])])]),s("h2",{attrs:{id:"举例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#举例"}},[t._v("#")]),t._v(" 举例")]),t._v(" "),s("p",[t._v('使用indent命令将C语言源文件"test.c"中所有的sizeof后面添加一个空格，输入如下命令：')]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("sogrey@bogon newDir"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" test.c\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("sogrey@bogon newDir"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" test.c\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#include "stdio.h"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#include "string.h"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#include "stdlib.h"')]),t._v("\nint "),s("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  short int "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("sa")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  int "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  long "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("la")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  float f "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  double "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("d")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  char "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ch")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  char str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ABC"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  char *p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  struct str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  double d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  char ch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  int data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("str_wu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n struct str1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  char ch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  double d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  int data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("str_wu1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    printf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sizeof(short):%d'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(",sizeof"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sa"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    printf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sizeof(int):%d'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(",sizeof"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    printf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sizeof(long):%d'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(",sizeof"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("la"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    printf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sizeof(float):%d'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(",sizeof"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    printf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sizeof(double):%d'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(",sizeof"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    printf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sizeof(char):%d'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(",sizeof"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    printf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sizeof(string):%d'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(",sizeof"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    printf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sizeof(point address):%d'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(",sizeof"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    printf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sizeof(Point):%d'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(",sizeof"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("*p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    printf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sizeof(Struct):%d'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(",sizeof"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str_wu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    printf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sizeof(Struct):%d'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(",sizeof"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str_wu1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    system"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pause"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("sogrey@bogon newDir"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ indent "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-bs")]),t._v(" test.c\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("sogrey@bogon newDir"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" test.c\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#include "stdio.h"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#include "string.h"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#include "stdlib.h"')]),t._v("\nint\n"),s("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("main")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  short int sa "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  int a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  long la "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  float f "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  double d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  char ch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  char str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ABC"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  char *p "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  struct str\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    double d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    char ch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    int data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" str_wu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  struct str1\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    char ch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    double d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    int data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" str_wu1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("printf")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sizeof(short):%d'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(", sizeof "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sa"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("printf")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sizeof(int):%d'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(", sizeof "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("printf")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sizeof(long):%d'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(", sizeof "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("la"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("printf")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sizeof(float):%d'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(", sizeof "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("printf")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sizeof(double):%d'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(", sizeof "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("printf")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sizeof(char):%d'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(", sizeof "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("printf")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sizeof(string):%d'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(", sizeof "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("printf")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sizeof(point address):%d'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(", sizeof "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("printf")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sizeof(Point):%d'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(", sizeof "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("*p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("printf")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sizeof(Struct):%d'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(", sizeof "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str_wu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("printf")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sizeof(Struct):%d'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(", sizeof "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str_wu1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  system "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pause"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("sogrey@bogon newDir"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ \n")])])]),s("p",[t._v("执行上面的命令后，用户可以打开指定的源文件查看在sizeof后面是否都添加了一个空格。由于该命令的参数非常多，所以用户可以根据实际需要选择适合的参数进行使用即可。")])])}),[],!1,null,null,null);s.default=e.exports}}]);