(window.webpackJsonp=window.webpackJsonp||[]).push([[248],{567:function(s,a,t){"use strict";t.r(a);var e=t(14),n=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"set-显示或设置shell特性及shell变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set-显示或设置shell特性及shell变量"}},[s._v("#")]),s._v(" set - 显示或设置shell特性及shell变量")]),s._v(" "),a("p",[s._v("set指令用来修改shell变量的显示和执行方式，没有任何选项和参数的时候，显示所有的变量名字和值。")]),s._v(" "),a("p",[s._v('set命令 作用主要是显示系统中已经存在的shell变量，以及设置shell变量的新变量值。使用set更改shell特性时，符号"+"和"-"的作用分别是打开和关闭指定的模式。set命令不能够定义新的shell变量。如果要定义新的变量，可以使用declare命令以变量名=值的格式进行定义即可。')]),s._v(" "),a("h2",{attrs:{id:"适用范围"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#适用范围"}},[s._v("#")]),s._v(" 适用范围")]),s._v(" "),a("div",{staticClass:"svg redhat"},[s._v("RedHat")]),s._v(" "),a("div",{staticClass:"svg rhel"},[s._v("RHEL")]),s._v(" "),a("div",{staticClass:"svg ubuntu"},[s._v("Ubuntu")]),s._v(" "),a("div",{staticClass:"svg centos"},[s._v("CentOS")]),s._v(" "),a("div",{staticClass:"svg debian"},[s._v("Debian")]),s._v(" "),a("div",{staticClass:"svg deepin"},[s._v("Deepin")]),s._v(" "),a("div",{staticClass:"svg suse"},[s._v("SUSE")]),s._v(" "),a("div",{staticClass:"svg opensuse"},[s._v("openSUSE")]),s._v(" "),a("div",{staticClass:"svg fedora"},[s._v("Fedora")]),s._v(" "),a("div",{staticClass:"svg linuxmint"},[s._v("Linux Mint")]),s._v(" "),a("div",{staticClass:"svg alpinelinux"},[s._v("Alpine Linux")]),s._v(" "),a("div",{staticClass:"svg archlinux"},[s._v("Arch Linux")]),s._v(" "),a("h2",{attrs:{id:"语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[s._v("#")]),s._v(" 语法")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OPTION"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("参数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),a("h2",{attrs:{id:"选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[s._v("#")]),s._v(" 选项")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 自动标记已经创建或者修改的变量，以供输出到环境变量")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-b")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使被终止的后台程序立刻汇报状态")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果指令执行的退出值不是0，那么立刻退出")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 取消使用通配符")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-h")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 自动记录函数所在的位置")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-k")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指令的参数都会被看作是指令的环境变量")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用监视模式")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只读模式，不执行")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动优先顺序模式")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当读取执行命令之后退出")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-u")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示shell读取的输入值")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-x")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行指令后显示该指令和其参数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" option            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 打开指定的特性。如果没有指定option，那么就打印当前的选项值")]),s._v("\n+o                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关闭指定的特性。如果没有指定option，则在标准输出中显示一系列用于重新创建当前选项设置的SET命令。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-B")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# shell执行支撑扩展(请参阅上面的Braces扩展)。默认情况下这是打开的。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-C")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果设置，bash不会用’>’、’>&’和’<>’重定向操作符覆盖现有文件。当使用重定向运算符”>|”而不是”>”创建输出文件时，可能会重写此操作。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-E")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果设置了，Err上的任何陷阱都由shell函数、命令替换和在子shell环境中执行的命令继承。在这种情况下，错误陷阱通常不会被继承。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-H")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启用！风格历史替代。默认情况下，当shell是交互式的时，此选项是打开的。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-P")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果已设置，则在执行更改当前工作目录的命令(如CD)时，shell不会遵循符号链接。它使用物理目录结构。默认情况下，bash在执行更改当前目录的命令时遵循目录逻辑链。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-T")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果设置，任何调试和返回的陷阱都由shell函数、命令替换和在子shell环境中执行的命令继承。在这种情况下，通常不会继承调试和返回陷阱。")]),s._v("\n--                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果在此选项之后没有参数，那么位置参数将被取消设置。否则，位置参数将被设置为args，即使其中一些参数以‘-’开头。")]),s._v("\n-                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 向选项的结束发出信号，使所有剩余的args被分配到位置参数。关闭-x和-v选项。如果没有args，则位置参数保持不变。")]),s._v("\n")])])]),a("p",[s._v("其中选项o的特征：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("allexport            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 等价于“-a”")]),s._v("\nbraceexpand          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 等价于“-B”")]),s._v("\nemacs                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用emacs风格的命令行编辑界面。默认情况下，当shell是交互式的时，这是启用的，除非shell是用“--noediting”选项启动的。")]),s._v("\nerrexit              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 等价于“-e”")]),s._v("\nerrtrace             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 等价于“-E”")]),s._v("\nfunctrace            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 等价于“-T”")]),s._v("\nhashall              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 等价于“-h”")]),s._v("\nhistexpand           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 等价于“-H”")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v("              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启用命令历史记录，如上文在“历史记录”下所述。默认情况下，此选项在交互式shell中打开。")]),s._v("\nignoreeof            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 其效果似乎是执行了shell命令‘IGNOREEOF=10’(参见上面的Shell变量)。")]),s._v("\nkeyword              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 等价于“-k”")]),s._v("\nmonitor              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 等价于“-m”")]),s._v("\nnoclobber            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 等价于“-C”")]),s._v("\nnoexec               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 等价于“-n”")]),s._v("\nnoglob               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 等价于“-f”")]),s._v("\nnolog                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 忽略")]),s._v("\nnotify               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 等价于“-b”")]),s._v("\nnounset              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 等价于“-u”")]),s._v("\nonecmd               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 等价于“-t”")]),s._v("\nphysical             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 等价于“-P”")]),s._v("\npipefail             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果已设置，则管道的返回值是在非零状态下退出的最后一个(最右边)命令的值，如果管道中的所有命令都成功退出，则为零。默认情况下，此选项被禁用。")]),s._v("\nposix                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将默认操作与POSIX标准不同的bash行为更改为与标准(POSIX模式)匹配。")]),s._v("\nprivileged           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 等价于“-p”")]),s._v("\nverbose              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 等价于“-v”")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用vi样式的命令行编辑界面.这也会影响用于读-e的编辑界面。")]),s._v("\nxtrace               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 等价于“-x”")]),s._v("\n")])])]),a("h2",{attrs:{id:"举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#举例"}},[s._v("#")]),s._v(" 举例")]),s._v(" "),a("p",[s._v("显示所有的变量")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("BASH")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/bin/bash\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("BASHOPTS")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("cdspell:checkwinsize:cmdhist:expand_aliases:extquote:force_fignore:hostcomplete:\ninteractive_comments:progcomp:promptvars:sourcepath\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("BASH_ALIASES")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("BASH_ARGC")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("BASH_ARGV")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("BASH_CMDS")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("BASH_LINENO")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n…\n")])])]),a("p",[s._v("显示shell的输出值")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("printf")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v("]0;%s@%s:%s"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\007"}},[s._v("\\007")]),s._v('"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("USER")]),s._v("}")]),s._v('"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("HOSTNAME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%%")]),s._v(".*}")]),s._v('"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PWD")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("#")]),s._v("$HOME"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("~}")]),s._v('"')]),s._v("\n")])])]),a("p",[s._v('使用declare命令定义一个新的环境变量"mylove"，并且将其值设置为"Visual C++"，输入如下命令：')]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("declare")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("mylove")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Visual C++'")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#定义新环境变量")]),s._v("\n")])])]),a("p",[s._v("再使用set命令将新定义的变量输出为环境变量，输入如下命令：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v(" mylove                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置为环境变量")]),s._v("\n")])])]),a("p",[s._v('执行该命令后，将会新添加对应的环境变量。用户可以使用env命令和grep命令分别显示和搜索环境变量"mylove"，输入命令如下：')]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("env")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" mylove             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#显示环境变量值")]),s._v("\n")])])]),a("p",[s._v("此时，该命令执行后，将输出查询到的环境变量值。")])])}),[],!1,null,null,null);a.default=n.exports}}]);