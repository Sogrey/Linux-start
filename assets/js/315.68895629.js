(window.webpackJsonp=window.webpackJsonp||[]).push([[315],{633:function(a,s,t){"use strict";t.r(s);var e=t(14),n=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"zip-可以用来解压缩文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#zip-可以用来解压缩文件"}},[a._v("#")]),a._v(" zip - 可以用来解压缩文件")]),a._v(" "),s("p",[a._v("zip是一种最通用的文件压缩方式，使用于unix、msdos、windows、OS等系统。如果在编译zip时包含bzip 2库，zip现在也支持bzip 2压缩。当将大于4GB的文件添加到存档中时，zip会自动使用Zip 64扩展名，包含Zip 64条目的归档将被更新(如果结果的归档仍然需要Zip 64)，归档的大小将超过4GB，或者当归档中的条目数超过64K时。Zip 64也用于从标准输入中传输的档案，因为事先不知道这些档案的大小，但是选项fz可以用来强制zip创建与PKZIP 2兼容的档案(只要不需要Zip 64扩展)。必须使用PKZIP4.5兼容解压缩，例如解压缩6.0或更高版本，才能使用Zip 64扩展名提取文件。")]),a._v(" "),s("p",[a._v("zip程序将一个或多个压缩文件与有关文件的信息(名称、路径、日期、上次修改的时间、保护和检查信息以验证文件完整性)一起放入一个压缩存档中。可以使用一个命令将整个目录结构打包到zip存档中。对于文本文件来说，压缩比为2：1和3：1是常见的。zip只有一种压缩方法(通缩)，并且可以在不压缩的情况下存储文件。(如果添加了bzip 2支持，zip也可以使用bzip 2压缩，但这些条目需要一个合理的现代解压缩来解压缩。当选择bzip 2压缩时，它将通货紧缩替换为默认方法。)zip会自动为每个要压缩的文件选择更好的两个文件(通缩或存储，如果选择bzip2，则选择bzip2或Store)。")]),a._v(" "),s("h2",{attrs:{id:"适用范围"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#适用范围"}},[a._v("#")]),a._v(" 适用范围")]),a._v(" "),s("div",{staticClass:"svg redhat"},[a._v("RedHat")]),a._v(" "),s("div",{staticClass:"svg rhel"},[a._v("RHEL")]),a._v(" "),s("div",{staticClass:"svg ubuntu"},[a._v("Ubuntu")]),a._v(" "),s("div",{staticClass:"svg centos"},[a._v("CentOS")]),a._v(" "),s("div",{staticClass:"svg debian"},[a._v("Debian")]),a._v(" "),s("div",{staticClass:"svg deepin"},[a._v("Deepin")]),a._v(" "),s("div",{staticClass:"svg suse"},[a._v("SUSE")]),a._v(" "),s("div",{staticClass:"svg opensuse"},[a._v("openSUSE")]),a._v(" "),s("div",{staticClass:"svg fedora"},[a._v("Fedora")]),a._v(" "),s("div",{staticClass:"svg linuxmint"},[a._v("Linux Mint")]),a._v(" "),s("div",{staticClass:"svg alpinelinux"},[a._v("Alpine Linux")]),a._v(" "),s("div",{staticClass:"svg archlinux"},[a._v("Arch Linux")]),a._v(" "),s("h2",{attrs:{id:"语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[a._v("#")]),a._v(" 语法")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("选项"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("  zipfile  list\n")])])]),s("h2",{attrs:{id:"选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[a._v("#")]),a._v(" 选项")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("-a, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--ascii")]),a._v("                      "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将系统使用的EBCDIC文件转换为ascii")]),a._v("\n-A, --adjust-sfx                 "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 调整自解压可执行档案。自解压缩的可执行存档是通过将SFX存根放在现有存档的前面创建的。-A选项告诉zip调整存储在归档中的条目偏移量，以考虑到这些“序言”数据。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-b")]),a._v(" path ,  --temp-path path      "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 为临时zip归档使用指定的路径")]),a._v("\n-B, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--binary")]),a._v("                     "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用二进制格式，默认是文本格式")]),a._v("\n-c, --entry-comments             "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 给被压缩的文件加上注释信息")]),a._v("\n-d, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--delete")]),a._v("                     "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将指定的文件从压缩文件中删除")]),a._v("\n-db, --display-bytes             "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示正在运行的字节计数，显示压缩的字节和要运行的字节。")]),a._v("\n-dc, --display-counts            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示已压缩的条目的运行计数和要运行的条目")]),a._v("\n-dd, --display-dots              "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在每个条目被拉链时显示点(除了在具有自己的进度指示器的端口上)。见下面的设置点大小-DS。默认情况下，每处理10 MB的输入文件就有一个点。-v选项还显示点(以前的速率比这个高得多，但现在-v也默认为10 MB)，这个速率也是由-ds控制的。")]),a._v("\n-dg, --display-globaldots        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示存档的进度点，而不是为每个文件显示进度点。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ds")]),a._v(" size, --dot-size size        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 设置为显示的每个点处理的输入文件的数量。尺寸为nm格式，其中n是一个数字，m是一个乘数。目前m可以是k(KB)，m(MB)，g(GB)，或者t(TB)，所以如果n是100，m是k，那么大小将是100 k，即100 KB。默认值为10 MB。")]),a._v("\n-du, --display-usize             "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示每个条目的未压缩大小。")]),a._v("\n-dv, --display-volume            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示正在读取的每个条目的卷(磁盘)号，如果读取现有存档，并将其写入")]),a._v("\n-D, --no-dir-entries             "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 不要在zip存档中为目录创建条目。")]),a._v("\n-DF, --difference-archive        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建一个包含自原始存档创建以来所有新的和已更改的文件的归档文件。")]),a._v("\n-e, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--encrypt")]),a._v("                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 压缩文件加密")]),a._v("\n-f, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--freshen")]),a._v("                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 替代压缩文件中的旧文件，如果文件不存在，那么不会追加文件")]),a._v("\n-F, --fix, -FF, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--fixfix")]),a._v("         "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 尝试修复已经损坏的压缩文件")]),a._v("\n-FI, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--fifo")]),a._v("                      "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 通常zip会跳过读取遇到的任何FIFO(命名管道)，因为如果FIFO没有被喂入，zip就会挂起。")]),a._v("\n-FS, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--filesync")]),a._v("                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将存档的内容与操作系统上的文件同步")]),a._v("\n-g, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--grow")]),a._v("                       "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将文件追加到已经存在的压缩文件结尾")]),a._v("\n-i, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--include")]),a._v("                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 仅包含指定的文件")]),a._v("\n-j, --junk-paths                 "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 压缩的时候，忽略文件名中的路径，只保存文件名和内容")]),a._v("\n-J, --junk-sfx                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 从存档中删除任何预置的数据")]),a._v("\n-i, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--include")]),a._v("                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 只包含指定的文件 ")]),a._v("\n-la, --log-append                "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 附加到现有日志文件。默认值是覆盖")]),a._v("\n-lf, --logfile-path              "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在给定路径上打开日志文件。默认情况下，该位置的任何现有文件都会被覆盖")]),a._v("\n-li, --log-info                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在日志中包含信息消息，例如正在压缩的文件名。默认情况下，只包含命令行、任何警告和错误以及最终状态。")]),a._v("\n-L, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--license")]),a._v("                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示zip的许可证")]),a._v("\n-m, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--move")]),a._v("                       "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将指定的文件移动到压缩文件")]),a._v("\n-MM, --must-match                "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 所有输入模式必须至少匹配一个文件，所有找到的输入文件必须是可读的。")]),a._v("\n-n, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--suffixes")]),a._v("                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 不要尝试压缩以给定后缀命名的文件。")]),a._v("\n-nw, --no-wild                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 不要执行内部通配符处理。")]),a._v("\n-o, --latest-time                "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将zip归档的“最后修改”时间设置为在zip归档中的条目中找到的最新(最老的)“最后修改”时间。")]),a._v("\n-O, --output-file                "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 像往常一样处理归档更改，但不是更新现有存档，而是将新存档输出到输出文件。")]),a._v("\n-p, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--path")]),a._v("                       "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将相对文件路径作为存储在存档中的文件名称的一部分")]),a._v("\n-P, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--password")]),a._v("                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 加密")]),a._v("\n-q, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--quite")]),a._v("                      "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 静默模式，不显示执行过程")]),a._v("\n-r, --recurse-paths              "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 压缩的时候，递归处理目录")]),a._v("\n-R, --recurse-patterns           "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 递归遍历目录结构，从当前目录开始。")]),a._v("\n-s, --split-size                 "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 启用创建拆分存档并设置拆分大小")]),a._v("\n-sb, --split-bell                "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 如果拆分并使用拆分暂停模式，则在zip对每个拆分目标暂停时按下铃声。")]),a._v("\n-sc, --show-command              "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示已处理并退出的启动zip的命令行")]),a._v("\n-sf, --show-files                "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示要操作的文件，然后退出。")]),a._v("\n-so, --show-options              "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示在当前系统上编译的zip支持的所有可用选项")]),a._v("\n-sp, --split-pause               "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 如果使用-s启用拆分，则启用拆分暂停模式")]),a._v("\n-su, --show-unicode              "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 和-sf一样，如果存在，还会显示路径的unicode版本")]),a._v("\n-sU, --show-just-unicode         "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 和-sf一样，仅显示路径的Unicode版本(如果存在)，否则显示路径的标准版本。")]),a._v("\n-sv, --split-verbose             "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在拆分时启用各种详细的消息，显示拆分是如何进行的。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" mmddyyyy, --from-date mmddyyyy "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 不要对在指定日期之前修改的文件进行操作，其中mm是月份(00-12)，dd是月份的日期(01-31)，yyyy是年。")]),a._v("\n-T, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--test")]),a._v("                       "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 测试新zip文件的完整性。如果检查失败，旧的zip文件将保持不变，并且(使用-m选项)不会删除输入文件。")]),a._v("\n-TT, --unzip-command             "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 当使用-T选项时，使用命令cmd而不是“unzip-tqq”来测试存档。")]),a._v("\n-U, --copy-entries               "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将条目从一个存档复制到另一个存档。")]),a._v("\n-u, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--update")]),a._v("                     "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 更新文件，不存在的时候，直接追加。仅当zip存档中的现有条目比zip存档中的版本修改得更近时，才替换(更新)它。")]),a._v("\n-UN, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--unicode")]),a._v("                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 确定zip应该如何处理unicode文件名")]),a._v("\n-x, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--exclude")]),a._v("                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 压缩时不包含指定的文件")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v("                               "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 压缩时直接保存符号链接")]),a._v("\n-v, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--verbose")]),a._v("                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示执行过程")]),a._v("\n-ws, --wild-stop-dirs            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 通配符仅在目录级别匹配。")]),a._v("\n-"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#                               # 使用指定的数字#调整压缩速度，其中-0表示没有压缩(存储所有文件)，-1表示最快的压缩速度(压缩较少)，-9表示最慢的压缩速度(最佳压缩，忽略后缀列表)。默认的压缩级别是-6")]),a._v("\n-@, --names-stdin                "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 从标准输入中获取输入文件列表。每行只有一个文件名。")]),a._v("\n-h2, --more-help                 "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示扩展帮助，包括更多关于命令行格式、模式匹配和更模糊的选项。")]),a._v("\n\n-?, -h, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--help")]),a._v("                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示帮助文档")]),a._v("\n-V, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v("                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示命令版本信息")]),a._v("\n")])])]),s("h2",{attrs:{id:"模式匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模式匹配"}},[a._v("#")]),a._v(" 模式匹配")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("?")]),a._v("，匹配任意单个字符")]),a._v(" "),s("li",[s("code",[a._v("*")]),a._v("，匹配任意多个字符")]),a._v(" "),s("li",[s("code",[a._v("[]")]),a._v("匹配括号内所示范围内的任何字符(例如：[a-f]，[0-9])。")])]),a._v(" "),s("h2",{attrs:{id:"退出码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#退出码"}},[a._v("#")]),a._v(" 退出码")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("0")]),a._v("正常，没有错误。")]),a._v(" "),s("li",[s("code",[a._v("2")]),a._v("压缩文件的意外结束。")]),a._v(" "),s("li",[s("code",[a._v("3")]),a._v("检测到zip文件格式中的通用错误。")]),a._v(" "),s("li",[s("code",[a._v("4")]),a._v("在程序初始化期间，zip无法为一个或多个缓冲区分配内存。")]),a._v(" "),s("li",[s("code",[a._v("5")]),a._v("检测到zip文件格式出现严重错误。")]),a._v(" "),s("li",[s("code",[a._v("6")]),a._v("条目太大，无法处理(例如，不使用Zip 64或试图读取现有存档太大时，输入文件大于2GB)或条目太大，不能用zip拆分。")]),a._v(" "),s("li",[s("code",[a._v("7")]),a._v("无效注释格式。")]),a._v(" "),s("li",[s("code",[a._v("8")]),a._v("zip-T失败或内存不足。")]),a._v(" "),s("li",[s("code",[a._v("9")]),a._v("用户使用Control-C(或类似的)过早中止zip。")]),a._v(" "),s("li",[s("code",[a._v("10")]),a._v("使用临时文件时，zip遇到了一个错误。")]),a._v(" "),s("li",[s("code",[a._v("11")]),a._v("读取或查找错误。")]),a._v(" "),s("li",[s("code",[a._v("12")]),a._v("zip无事可做。")]),a._v(" "),s("li",[s("code",[a._v("13")]),a._v("丢失或空压缩文件。")]),a._v(" "),s("li",[s("code",[a._v("14")]),a._v("写入文件时出错。")]),a._v(" "),s("li",[s("code",[a._v("15")]),a._v("zip无法创建要写入的文件。")]),a._v(" "),s("li",[s("code",[a._v("16")]),a._v("坏命令行参数。")]),a._v(" "),s("li",[s("code",[a._v("18")]),a._v("zip无法打开要读取的指定文件。")]),a._v(" "),s("li",[s("code",[a._v("19")]),a._v("在此系统中不支持的选项编译了zip。")])]),a._v(" "),s("h2",{attrs:{id:"例子代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#例子代码"}},[a._v("#")]),a._v(" 例子代码")]),a._v(" "),s("p",[a._v("创建存档stuff.zip(假设它不存在)，并以压缩形式将所有文件放在当前目录中(.zip后缀自动添加，除非存档名称已经包含一个点；这允许明确说明其他后缀)。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v("  stuff  *\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v("  stuff  .* *\n")])])]),s("p",[a._v("压缩整个目录。创建存档foo.zip，其中包含当前目录中包含的目录foo中的所有文件和目录。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v("  foo  foo\n")])])]),s("p",[a._v("您可能希望创建一个包含foo中文件的zip存档，而不记录目录名foo。可以使用-j选项关闭路径，如")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-j")]),a._v("  foo  foo/*\n")])])]),s("p",[a._v("如果您缺少磁盘空间，您可能没有足够的空间来保存原始目录和相应的压缩归档文件。在这种情况下，您可以使用-m选项分步骤创建归档文件。如果foo包含子目录Tom、Dick和Harry。其中，第一个命令创建foo.zip，下两个命令添加到其中。在完成每个zip命令后，最后创建的归档文件将被删除，为下一个zip命令提供工作空间。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-rm")]),a._v("  foo  foo/tom\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-rm")]),a._v("  foo  foo/dick\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-rm")]),a._v("  foo  foo/harry\n")])])]),s("p",[a._v("使用-s设置拆分大小并创建拆分存档。大小可选地被k(KB)、m(MB)、g(Gb)或t(Tb)之一跟随。创建目录foo的拆分存档，每个分区不大于2GB。如果foo包含5 GB的内容，并且内容未经压缩就存储在拆分存档中(为了使这个示例变得简单)，这将创建三个分块，分别是2GB的split.z01、2GB的split.z02和略高于1GB的split.zip。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v("  2g  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v("  split.zip  foo\n")])])]),s("p",[a._v("虽然zip不更新拆分档案，但zip提供了新的选项-O(-Output-file)，允许更新拆分档案并将其保存在新的存档中。读取归档文件，即使拆分，也会添加foo.c和bar.c文件，并将结果存档写入outArchive.zip。如果inArchive.zip是拆分的，那么outArchive.zip默认为相同的拆分大小。请注意，outArchive.zip和使用它创建的任何拆分文件都会在没有警告的情况下被覆盖。这种情况将来可能会改变。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v("  inarchive.zip  foo.c  bar.c  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--out")]),a._v("  outarchive.zip\n")])])]),s("p",[a._v("将/home/Blinux/html/这个目录下所有文件和文件夹打包为当前目录下的html.zip：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-q")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" html.zip /home/Blinux/html\n")])])]),s("p",[a._v("上面的命令操作是将绝对地址的文件及文件夹进行压缩，以下给出压缩相对路径目录，比如目前在Bliux这个目录下，执行以下操作可以达到以上同样的效果：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-q")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" html.zip html\n")])])]),s("p",[a._v("比如现在我的html目录下，我操作的zip压缩命令是：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-q")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" html.zip *\n")])])]),s("p",[a._v("压缩 example/basic/ 目录内容到 basic.zip 压缩包中 -x 指定排除目录，注意没有双引号将不起作用。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" basic.zip example/basic/ "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-x")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"example/basic/node_modules/*"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-x")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"example/basic/build/*"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-x")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"example/basic/coverage/*"')]),a._v("\n")])])]),s("p",[a._v("上面压缩解压出来，内容存放在 example/basic/， 如果想存放到根目录，进入目录进行压缩，目前没有找到一个合适的参数来解决此问题。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" example/basic/ "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" basic.zip "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-x")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"node_modules/*"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-x")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"build/*"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-x")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"coverage/*"')]),a._v("\n")])])]),s("p",[a._v("压缩效率选择:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-9")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 1-9 faster->better")]),a._v("\n")])])]),s("p",[a._v("创建 public_html 目录下忽略所有文件和文件夹，排除包括文本 backup 的所有文件。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" public_html.zip public_html "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-x")]),a._v(" *backup*\n")])])]),s("p",[a._v("httpdocs 目录忽略 .svn 文件或 git 的文件和目录下创建所有文件的归档。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" httpdocs.zip httpdocs "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--exclude")]),a._v(" *.svn* "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--exclude")]),a._v(" *.git*\n")])])]),s("p",[a._v("httpdocs 目录忽略的所有文件，并与 .log 结尾的目录下创建所有文件的归档。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" httpdocs.zip httpdocs "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--exclude")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.log"')]),a._v("\n")])])]),s("h2",{attrs:{id:"举例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#举例"}},[a._v("#")]),a._v(" 举例")]),a._v(" "),s("p",[a._v("压缩文件")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("sogrey@bogon 文档"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(".c  "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(".c  "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(".c  file1.txt.gz  file2.txt  list.txt  run.sh\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("sogrey@bogon 文档"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" res "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" *.c "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#压缩当前目录下的所有.c文件")]),a._v("\n  adding: "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(".c "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("stored "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  adding: "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(".c "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("stored "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  adding: "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(".c "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("stored "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("sogrey@bogon 文档"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(".c  "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(".c  "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(".c  file1.txt.gz  file2.txt  list.txt  res.zip  run.sh\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("sogrey@bogon 文档"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("$ \n")])])]),s("p",[a._v("2）给压缩文件添加、删除内容")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("sogrey@bogon 文档"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v(" res.zip "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-g")]),a._v(" file2.txt "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#追加file2.txt")]),a._v("\n  adding: file2.txt "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("deflated "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("28")]),a._v("%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("sogrey@bogon 文档"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(".c  "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(".c  "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(".c  file1.txt.gz  file2.txt  list.txt  res.zip  run.sh\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("sogrey@bogon 文档"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v(" res.zip "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" file2.txt "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#删除file2.txt")]),a._v("\ndeleting: file2.txt\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("sogrey@bogon 文档"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("$ \n")])])]),s("p",[a._v("3）压缩时设置密码")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("sogrey@bogon 文档"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-er")]),a._v(" res2 "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" *.c "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#设置密码，需要输入两次密码")]),a._v("\nEnter password: \nVerify password: \n  adding: "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(".c "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("stored "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  adding: "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(".c "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("stored "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  adding: "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(".c "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("stored "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("sogrey@bogon 文档"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("$ \n")])])]),s("h2",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[a._v("#")]),a._v(" 安装")]),a._v(" "),s("p",[a._v("CentOS：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("yum "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("unzip")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);