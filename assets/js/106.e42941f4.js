(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{424:function(a,s,t){"use strict";t.r(s);var e=t(14),n=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"find-在指定目录下查找文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#find-在指定目录下查找文件"}},[a._v("#")]),a._v(" find - 在指定目录下查找文件")]),a._v(" "),s("p",[a._v("chown命令 改变某个文件或目录的所有者和所属的组，该命令可以向某个用户授权，使该用户变成指定文件的所有者或者改变文件所属的组。用户可以是用户或者是用户D，用户组可以是组名或组id。文件名可以使由空格分开的文件列表，在文件名中可以包含通配符。")]),a._v(" "),s("p",[a._v("只有文件主和超级用户才可以便用该命令。")]),a._v(" "),s("p",[a._v("在指定的目录下查找文件，并可对找到的文件执行指定的操作。Find指定会从指定的目录向下递归搜索各个子目录。GNUf ind根据优先级规则从左到右计算给定表达式，从而搜索根植于每个给定文件名的目录树，直到找到结果，此时find移到下一个文件名。如果在安全很重要的环境中使用find(例如，如果您使用它搜索其他用户可写的目录)，则应阅读findutils文档中的“Security Considerations”一章。")]),a._v(" "),s("h2",{attrs:{id:"适用范围"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#适用范围"}},[a._v("#")]),a._v(" 适用范围")]),a._v(" "),s("div",{staticClass:"svg redhat"},[a._v("RedHat")]),a._v(" "),s("div",{staticClass:"svg rhel"},[a._v("RHEL")]),a._v(" "),s("div",{staticClass:"svg ubuntu"},[a._v("Ubuntu")]),a._v(" "),s("div",{staticClass:"svg centos"},[a._v("CentOS")]),a._v(" "),s("div",{staticClass:"svg debian"},[a._v("Debian")]),a._v(" "),s("div",{staticClass:"svg deepin"},[a._v("Deepin")]),a._v(" "),s("div",{staticClass:"svg suse"},[a._v("SUSE")]),a._v(" "),s("div",{staticClass:"svg opensuse"},[a._v("openSUSE")]),a._v(" "),s("div",{staticClass:"svg fedora"},[a._v("Fedora")]),a._v(" "),s("div",{staticClass:"svg linuxmint"},[a._v("Linux Mint")]),a._v(" "),s("div",{staticClass:"svg alpinelinux"},[a._v("Alpine Linux")]),a._v(" "),s("div",{staticClass:"svg archlinux"},[a._v("Arch Linux")]),a._v(" "),s("h2",{attrs:{id:"语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[a._v("#")]),a._v(" 语法")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-H"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-L"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-P"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-D debugopts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-Olevel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("expression"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),s("h2",{attrs:{id:"选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[a._v("#")]),a._v(" 选项")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-P")]),a._v("                       "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 找到符号链接的时候，所有的属性都来自符号链接。这是默认选项")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-L")]),a._v("                       "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 找到符号链接的时候，所有的属性来自文件本身，而不是符号链接")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v("                       "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 找到符号链接的时候，所有的属性都来自符号链接。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-D")]),a._v(" debugoptions          "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 打印诊断信息；这可能有助于诊断问题，为什么查找不做您想做的事情。调试选项列表应以逗号分隔。可以有一下选项：")]),a._v("\n                         "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#  - help，解释调试选项")]),a._v("\n                         "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#  - tree，以其原始和优化的形式显示表达式树")]),a._v("\n                         "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#  - stat，使用stat和lstat系统调用检查作为文件的打印消息。find程序试图将此类调用最小化。")]),a._v("\n                         "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#  - opt，打印有关表达式树优化的诊断信息；请参见-O选项。")]),a._v("\n                         "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#  - rates，打印一个摘要，指示每个谓词成功或失败的频率。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-Olevel")]),a._v("                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 启用查询优化。Find程序重新排序测试以加快执行速度，同时保持总体效果；也就是说，具有副作用的谓词不会相对于其他谓词重新排序。在每个优化级别上执行的优化如下：")]),a._v("\n                         "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# - 0，相当于优化级别1")]),a._v("\n                         "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# - 1，这是默认的优化级别，与传统行为相对应。表达式被重新排序，以便首先执行仅基于文件名(例如-name和-regex)的测试。")]),a._v("\n                         "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# - 2，任何-type或-xtype的测试都是在只基于文件名的任何测试之后，而是在需要inode提供信息的任何测试之前执行的。在许多Unix的现代版本上，readdir()返回文件类型，因此这些谓词比需要先统计文件的谓词计算速度更快")]),a._v("\n                         "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# - 3，在此优化级别上，启用了完全基于成本的查询优化器。对测试顺序进行了修改，以便首先执行廉价(即快速)测试，并在必要时执行更昂贵的测试。在每个成本范围内，谓词将根据它们是否可能成功而更早或更晚地进行评估。对于-o，有可能成功的谓词会更早地进行评估，而对于-a，可能会失败的谓词将更早地进行评估。")]),a._v("\n\n-help, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--help")]),a._v("                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示帮助文档")]),a._v("\n-version, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v("              "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示命令版本信息")]),a._v("\n")])])]),s("h2",{attrs:{id:"说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#说明"}},[a._v("#")]),a._v(" 说明")]),a._v(" "),s("p",[a._v("-H，-L和-P选项控制符号链接的处，。后面的命令行参数被视为要检查的文件或目录的名称，直到以‘-’或‘(’或‘！’开头的第一个参数为止。该参数和随后的任何参数都被视为描述要搜索的内容的表达式。如果没有提供路径，则使用当前目录。如果没有给出表达式，则使用表达式“-print”。")]),a._v(" "),s("p",[a._v("这些选项控制find的行为，但在上一个路径名之后立即指定。五个“实”选项-H，-L，-P，-D和-O必须出现在第一个路径名之前，如果有的话。“--”也可以用来表示任何剩余的参数都不是选项(但如果在起始点列表中使用通配符，则确保所有起始点都以“./”或“/”开头通常更安全)。")]),a._v(" "),s("p",[a._v("如果指定了-H、-L和-P中的一个，最后一个出现在命令行上的操作将生效。由于-P选项是默认的，因此，除非指定了-H或-L，否则-P选项应视为有效。在命令行本身的处理过程中，在搜索开始之前，GNU经常查找stats文件。当-H或-L选项生效时，列出的任何作为-newer参数的符号链接将被取消引用，并且时间戳将从符号链接指向的文件中提取。同样的考虑也适用于-newerxy，-anewer和-cnewer。")]),a._v(" "),s("h2",{attrs:{id:"表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表达式"}},[a._v("#")]),a._v(" 表达式")]),a._v(" "),s("p",[a._v("表达式由OPTION(这些选项影响整体操作而不是处理特定文件，并且始终返回true)、TEST(返回真或假值)和ACTION(有副作用并返回真或假值)组成，所有这些选项都由操作符‘-’分隔。如果表达式不包含“-prune”以外的操作，则对表达式为true的所有文件执行“-print”。")]),a._v(" "),s("p",[a._v("1."),s("strong",[a._v("OPTION")])]),a._v(" "),s("p",[a._v("所有选项总是返回true。除了-daystart、-follow和-regextype之外，这些选项会影响所有测试，包括在选项之前指定的测试。这是因为这些选项是在分析命令行时处理的，而测试在检查文件之前不会执行任何操作。在这方面，-daystart、-follow和-regextype选项是不同的，并且只对稍后出现在命令行中的测试有影响。因此，为了清晰起见，最好将它们放在表达式的开头。如果不这样做，就会发出警告。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v("               "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# depth的同义词，与FreeBSD、NetBSD、MacOSX和OpenBSD兼容.")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-daystart")]),a._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 测量时间(用于-amin，-atime，-cmin，-ctime，-mmin和-mtime)从今天开始，而不是从24小时前开始。此选项仅影响稍后出现在命令行中的测试。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-depth")]),a._v("           "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在目录本身之前处理每个目录的内容。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-follow")]),a._v("          "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用-L选项代替。解除引用符号链接。“follow”选项只影响在命令行中出现的测试。")]),a._v("\n-help, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--help")]),a._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 打印出帮助信息，并且退出")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ignore_readdir_race")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 通常情况下，Find将在无法统计文件时发出错误消息。如果您提供了此选项，并且在find从目录中读取文件的名称和它试图统计该文件的时间之间删除了一个文件，则不会发出错误消息。这也适用于命令行中给出其名称的文件或目录。此选项在读取命令行时生效，这意味着您不能在打开此选项的情况下搜索文件系统的一个部分，并在关闭该选项时搜索其中的一部分(如果需要这样做，则需要发出两个find命令，一个带有该选项，另一个没有)。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-maxdepth")]),a._v(" levels   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查找的最大深度，“-maxdepth 0”只对命令行出现的TEST和ACTION有效")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-mindepth")]),a._v(" levels   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 不要在低于levels的级别上应用任何测试或操作，“-maxdepth 1”意味着处理除命令行参数以外的所有文件。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-mount")]),a._v("             "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 不要将目录降到其他文件系统上。-xdev的替代名称，用于与find的其他版本兼容。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-noignore_readdir_race")]),a._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 关闭-ignore_readdir_race.")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-noleaf")]),a._v("             "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 不要通过假设目录包含的子目录比硬链接数少两个来进行优化。在搜索不遵循Unix目录链接约定的文件系统(如CD-ROM或MS-DOS文件系统或AFS卷挂载点)时，需要此选项。普通Unix文件系统上的每个目录至少有两个硬链接：name和“.”。此外，它的子目录(如果有的话)都有一个“.”链接到该目录的条目。当find检查一个目录时，在它声明了比目录的链接数少两个子目录之后，它知道目录中的其余条目是非目录的(目录树中的“leaf”文件)。如果只需要检查文件的名称，就不需要对它们进行统计；这就大大提高了搜索速度。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-regextype")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("type")]),a._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 更改命令行后面发生的-regex和-iregex测试所理解的正则表达式语法。")]),a._v("\n-version, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 打印find命令的版本信息，并且退出")]),a._v("\n-warn, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-nowarn")]),a._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 关闭或者打开警告信息")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-xautofs")]),a._v("              "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 不要降低autofs文件系统上的目录")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-xdev")]),a._v("                 "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 不要降低其他文件系统上的目录")]),a._v("\n")])])]),s("p",[a._v("2."),s("strong",[a._v("TEST")])]),a._v(" "),s("p",[a._v("有些测试，例如newerXY和-samefile，允许比较当前正在检查的文件和命令行上指定的引用文件。当使用这些测试时，引用文件的解释由选项H、-L和-P以及前面的任何选项决定，但是在解析命令行时，只检查一次引用文件。如果无法检查引用文件(例如，stat(2)系统调用失败)，则会发出错误消息，并查以非0状态退出。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("+n               "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 大于n")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v("               "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 小于n")]),a._v("\nn                "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# n")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-amin")]),a._v(" m          "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查找m分钟之前被访问过的文件")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-anewer")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("file")]),a._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 最近被访问的文件，而不是最近被修改的文件")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-atime")]),a._v(" m         "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 最近m天前被访问的文件")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-cmin")]),a._v(" m          "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查找m分钟之前被修改过文件状态的文件")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-cnewer")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("file")]),a._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 最近被未改过文件状态的文件，而不是最近被修改的文件")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ctime")]),a._v(" m         "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 最近m天前被修改文件状态的文件")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-mmin")]),a._v(" m          "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查找最近m分钟前被修改过内容的文件")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-mtime")]),a._v(" m         "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查找最近m天前被修改过内容的文件")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-empty")]),a._v("           "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查找大小为0的目录和文件")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-executable")]),a._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查找可以被执行的文件，或者可以被搜索的目录")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-fstype")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("type")]),a._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查找在指定文件系统上的文件")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-gid")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("id")]),a._v("          "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查找属于指定组id的文件")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-group")]),a._v(" name      "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查找属于指定组的文件")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ilname")]),a._v(" pattern  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 和“-lname”一样，但匹配是不区分大小写的。如果-L选项或-follow选项生效，则除非符号链接中断，否则此测试返回false。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-iname")]),a._v(" pattern   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 和“-name”一样，但匹配是不区分大小写的")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-inum")]),a._v(" n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 文件inode编号n。通常情况下，使用-samefile测试更容易。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ipath")]),a._v(" pattern   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 和“-iwholename”一样，不建议使用")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-iregex")]),a._v(" pattern  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 和“-regex”一样，但是匹配不区分大小写")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-iwholename")]),a._v(" pattern  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 和“-wholename”一样，但是匹配不区分大小写")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-links")]),a._v(" n         "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 有n个链接的文件")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-lname")]),a._v(" pattern   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 找找符合指定匹配模式的符号链接文件")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" pattern    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 文件名的基(删除了前导目录的路径)与shell模式匹配。元字符(“*”、“？”和“[]”)与“.”匹配。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-newer")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("file")]),a._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 比file更近修改的文件")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-newerXY")]),a._v(" reference  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将当前文件的时间戳与引用进行比较。引用参数通常是文件的名称(其中一个时间戳用于比较)，但也可能是描述绝对时间的字符串。X和Y是其他字母的占位符，这些字母选择属于如何使用引用进行比较的时间。")]),a._v("\n                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# a，文件的访问时间。")]),a._v("\n                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# B，文件的产生时间")]),a._v("\n                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# c，文件inode状态改变的时间")]),a._v("\n                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# m，文件的修改时间")]),a._v("\n                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# t，引用被直接解释为时间。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-nogroup")]),a._v("            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 没有组对应于文件的组ID")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-nouser")]),a._v("             "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 没有用户对应于文件的用户ID。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-path")]),a._v(" pattern       "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 文件名与shell模式匹配。元字符不处理“/”或‘.’，例如“find  .  -path  ’./sr*sc‘”为名为“./src/misc”的目录打印一个条目。若要忽略整个目录树，请使用-prune而不是检查树中的每个文件。例如，要跳过目录“src/emacs”及其下的所有文件和目录，并打印找到的其他文件的名称，请执行如下操作“find  .  -path  ./src/emacs  -prune  -o  –print”")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-perm")]),a._v("  –mode        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 为文件设置了所有权限位模式。符号模式以这种形式被接受，这通常是想要使用它们的方式。如果使用符号模式，则必须指定“u”、“g”或“o”")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-perm")]),a._v("  /mode        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 为该文件设置任何权限位模式。符号模式以这种形式被接受。如果使用符号模式，则必须指定“u”、“g”或“o”。有关一些说明性示例，请参见示例部分。如果没有在模式中设置权限位，此测试将匹配任何文件(这里的想法是与-perm-000的行为一致)。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-perm")]),a._v(" +mode          "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 不推荐使用这种模式集中任何权限位搜索文件的旧方法。你应该改用“-perm /mode”。例如，‘+u+x’是一个有效的符号模式(等效于+u,+x，即0111)。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-size")]),a._v("  n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("cwbkMG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查找指定大小的文件。文件单位默认是块，512字节。有以下单位：")]),a._v("\n                         "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# - ‘b’，521字节的块，默认")]),a._v("\n                         "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# - ‘c’，bytes")]),a._v("\n                         "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# - ‘w’，2个字节")]),a._v("\n                         "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# - ‘k’，1024字节")]),a._v("\n                         "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# - ‘M’，1048576字节")]),a._v("\n                         "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# - ‘G’，1073741824字节")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" 类型           "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查找指定类型的文件。c，字符设备；d，目录文件；p，有名管道；f，普通文件；l，符号链接；s，socket文件")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-uid")]),a._v(" n               "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 指定文件的uid")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-used")]),a._v(" n              "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 最后一次访问文件是在最后一次更改状态后的n天。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-user")]),a._v(" name           "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查找属于指定用户的文件")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-wholename")]),a._v(" pattern   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 等价于“-path”")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-writable")]),a._v("            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 匹配可写的文件。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-xtype")]),a._v(" c             "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 和“-type”相同，除非文件是符号链接。对于符号链接，-xtype检查-type不检查的文件的类型。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-context")]),a._v(" pattern     "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 文件的安全上下文与GLOB模式相匹配。")]),a._v("\n")])])]),s("p",[a._v("3."),s("strong",[a._v("ACTIONS")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-delete")]),a._v("              "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除文件；如果删除成功，则为true。如果删除失败，则发出错误消息。如果“-delete”失败，find的退出状态将为非零")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-exec")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("command")]),a._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 执行命令；如果返回0状态，则为true。以下所有要查找的参数都被视为命令的参数，直到遇到由‘；’组成的参数为止。字符串“{}”被当前文件名替换，当前文件名在命令的参数中出现在任何地方，而不仅仅是在只有它的参数中，就像在find的某些版本中那样。这两个构造可能都需要转义(用‘\\’)或引用，以保护它们不受外壳的扩展。有关使用-exec选项的示例，请参阅示例部分。指定的命令对每个匹配的文件运行一次。该命令在启动目录中执行。在使用-exec操作时存在不可避免的安全问题；您应该使用-execdir选项。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-exec")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("command")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" +   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -exec操作的这个变体在选定的文件上运行指定的命令，但是命令行是通过在末尾追加每个选定的文件名来构建的；命令的调用总数将比匹配的文件数少得多。命令行的构建方式与xargs构建其命令行的方式大致相同。命令中只允许“{}”的一个实例。命令在起始目录中执行。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-execdir")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("command")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-execdir")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("command")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" +  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 类似-exec，但指定的命令是从包含匹配文件的子目录运行的，该子目录通常不是您开始查找的目录。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-fls")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("file")]),a._v("              "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 真，类似“-ls”，但是写文件类似“-fprint”。输出文件总是被创建，即使谓词永远不匹配。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-fprint")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("file")]),a._v("           "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 真，将完整的文件名打印到文件中。如果运行find时文件不存在，则创建文件；如果文件存在，则截断文件。文件名‘/dev/stdout’和‘/dev/stderr’是专门处理的；它们分别引用标准输出和标准错误输出。输出文件总是被创建，即使谓词永远不匹配")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-fprint0")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("file")]),a._v("          "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 真，类似“-print0”，但是写文件类似“-fprint”。输出文件总是被创建，即使谓词永远不匹配。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-fprintf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("file")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("format")]),a._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 真，类似“-printf”但是写到文件类似“-fprint”。输出文件总是被创建，即使谓词永远不匹配。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ls")]),a._v("                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 真，在标准输出上以“ls -dils”格式列出当前文件。块计数为1K块，除非设置了环境变量POSIXLY_TRIDER，在这种情况下使用了512字节块。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ok")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("command")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("          "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 类似“-exec”，但是先问用户。如果用户同意，运行命令。否则只会返回FALSE。如果运行该命令，它的标准输入将从/dev/null重定向。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-okdir")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("command")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 类似“-execdir”，但是和“-ok”一样先询问用户。如果用户不同意，只需返回false。如果运行该命令，它的标准输入将从/dev/null重定向。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-print")]),a._v("                 "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 真，在标准输出上打印完整的文件名，然后是换行符。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-print0")]),a._v("                "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 真，在标准输出上打印完整的文件名，然后是空字符")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-printf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("format")]),a._v("         "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 真，在标准输出上打印格式，解释‘\\’转义和‘%’指令。字段宽度和精度可以用“printf  C“函数指定。请注意，许多字段是以%s而不是%d的形式打印的。与-print不同，-printf不会在字符串末尾添加换行符。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-prune")]),a._v("                 "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 如果该文件是一个目录，则不要下降到它")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-quit")]),a._v("                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 马上退出。不会继续运行子进程，但不会处理命令行上指定的路径。")]),a._v("\n")])])]),s("p",[a._v("4."),s("strong",[a._v("操作符，按优先次序排列")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("expr")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("              "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 强制优先")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("expr")]),a._v("                "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 取反")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-not")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("expr")]),a._v("             "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 取反，但不适合POSIX")]),a._v("\nexpr1 expr2           "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 隐含的“与“操作")]),a._v("\nexpr1 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v(" expr2        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 和“expr1 expr2“一样")]),a._v("\nexpr1 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-and")]),a._v(" expr2      "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 和“expr1 expr2“一样，但是不适合POSIX")]),a._v("\nexpr1 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" expr2        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# “或“操作")]),a._v("\nexpr1 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-or")]),a._v(" expr2       "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# “或“操作，不适合POSIX")]),a._v("\nexpr1 , expr2         "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 始终对expr1和expr2进行计算。expr1的值被丢弃；列表的值是expr2的值。逗号运算符对于搜索几种不同类型的东西很有用，但是只遍历文件系统层次结构一次")]),a._v("\n")])])]),s("h2",{attrs:{id:"环境变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#环境变量"}},[a._v("#")]),a._v(" 环境变量")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("LANG")]),a._v("为未设置或空的全局变量提供默认值。")]),a._v(" "),s("li",[s("code",[a._v("LC_ALL")]),a._v("如果设置为非空字符串值，则重写所有其他全局变量的值。")]),a._v(" "),s("li",[s("code",[a._v("LC_COLLATE")]),a._v("POSIX标准指定此变量影响用于-name选项的模式匹配。对‘LC_COLLATE’的支持取决于系统库。这个变量还会影响对“-ok“的响应的解释；当‘LC_MESSAGES’变量选择用于将响应解释为”-ok“的实际模式时，模式中任何括号表达式的解释都会受到‘LC_COLLATE’的影响。")]),a._v(" "),s("li",[s("code",[a._v("LC_CTYPE")]),a._v("如果系统的fnmatch (3)库函数支持该变量，则此变量将影响正则表达式中使用的字符类的处理以及名称测试。此变量还会影响用于解释“-ok“发出的提示的响应的正则表达式中任何字符类的解释。当打印文件名时，‘LC_CTYPE’环境变量还将影响哪些字符被认为是不可打印的；")]),a._v(" "),s("li",[s("code",[a._v("LC_MESSAGES")]),a._v("确定要用于全局消息的区域设置。如果设置了‘POSIXLY_RETERT’环境变量，这还将确定对“-ok“操作所作提示的响应的解释")]),a._v(" "),s("li",[s("code",[a._v("NLSPATH")]),a._v("确定全局信息目录的位置。")]),a._v(" "),s("li",[s("code",[a._v("PATH")]),a._v("影响搜索以查找-exec、-execdir、-ok和-okdir调用的可执行文件的目录。")]),a._v(" "),s("li",[s("code",[a._v("POSIXLY_CORRECT")]),a._v("确定-ls和-fls使用的块大小。如果设置了POSIXLY_RIDERT，则块是512字节的单位。否则，它们是1024字节的单位。")]),a._v(" "),s("li",[s("code",[a._v("TZ")]),a._v("影响用于-printf和-fprintf的一些与时间相关的格式指令的时区。")])]),a._v(" "),s("h2",{attrs:{id:"返回值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#返回值"}},[a._v("#")]),a._v(" 返回值")]),a._v(" "),s("p",[a._v("如果成功，返回0；如果失败，返回大于0的数。")]),a._v(" "),s("h2",{attrs:{id:"举例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#举例"}},[a._v("#")]),a._v(" 举例")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v("  /tmp  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v("  core  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f  -print, "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("xargs")]),a._v("  /bin/rm  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v("\n")])])]),s("p",[a._v("在/tmp目录中或下面查找名为core的文件并删除它们。请注意，如果存在包含换行符、单引号或双引号或空格的文件名，则此操作将不正确。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v("  /tmp  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v("  core  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v("  f  -print0, "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("xargs")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-0")]),a._v("  /bin/rm  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v("\n")])])]),s("p",[a._v("在目录/tmp中或下面查找名为core的文件，并删除它们，处理文件名，以便正确处理包含单引号或双引号、空格或换行符的文件或目录名称。名称测试出现在-type测试之前，以避免对每个文件调用stat(2)。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("  –type  f  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-exec")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("file")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'{}'")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("对当前目录中或当前目录下的每个文件运行“file”。注意，大括号被用单引号括起来，以保护它们不被解释为shell脚本标点符号。分号同样受到反斜杠的保护，尽管在这种情况下也可以使用单引号。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v("  /  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-perm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-4000")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-fprintf")]),a._v(" /root/suid.txt "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'%#m %u %p\\n'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" ,  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-size")]),a._v(" +100M "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-fprintf")]),a._v(" /root/big.txt "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'%-10s %p\\n'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v("只遍历文件系统一次，将setuid文件和目录列出到/root/suid.txt，并将大型文件列出到/root/big.txt")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$HOME")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-mtime")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n")])])]),s("p",[a._v("在您的主目录中搜索在过去24小时内已经修改的文件。此命令的工作方式是这样的，因为每个文件上次修改后的时间被除以24小时，其余部分被丢弃。这意味着要匹配-mtime 0，文件必须在过去进行修改，而修改时间不到24小时前。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v("  /sbin  /usr/sbin  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-executable")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-readable")]),a._v(" –print\n")])])]),s("p",[a._v("搜索可执行但不可读的文件")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("  –perm  "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("664")]),a._v("\n")])])]),s("p",[a._v("搜索所有者和组有读写权限，但其他用户可以读取但不能写入的文件。满足这些条件但设置了其他权限的文件(例如，如果有人可以执行该文件)将不匹配。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-perm")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-664")]),a._v("\n")])])]),s("p",[a._v("搜索所有者和组有读写权限的文件，以及其他用户可以读取的文件，而不考虑是否存在任何额外的权限位(例如可执行位)。例如，这将匹配具有模式0777的文件。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("  –perm  /222\n")])])]),s("p",[a._v("搜索可写的文件")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-perm")]),a._v("  /220\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("  –perm  /u+w,g+w\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-perm")]),a._v("  /u"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("w,g"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("w\n")])])]),s("p",[a._v("所有这三个命令都执行相同的操作，但是第一个命令使用文件模式的八进制表示，另外两个命令使用符号形式。这些命令都搜索其所有者或组可写的文件。文件不必由所有者和组同时写入才能匹配，两者都可以。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("  –perm  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-220")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-perm")]),a._v("  -g+w,u+w\n")])])]),s("p",[a._v("这两个命令执行相同的操作；搜索它们的所有者和组都可以写的文件。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-perm")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-444")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-perm")]),a._v("  /222  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-perm")]),a._v("  /111\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("  –perm  -a+r  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-perm")]),a._v("  /a+w  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-perm")]),a._v("  /a+x\n")])])]),s("p",[a._v("这两个命令都搜索每个人都可读的文件(-perm -444或-perm -a+r)，至少设置了一个写入位集(-perm /222或-perm /a+w)，但任何人都不能执行(！-perm /111和！-perm /a+x)。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v("  /source-dir\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v("  .snapshot  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-prune")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" *~ "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-print0")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\ncpio  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-pmd0")]),a._v("  /dest-dir\n")])])]),s("p",[a._v("此命令将/source-dir的内容复制到/dest-dir，但省略了名为“.snapshot “的文件和目录(以及其中的任何内容)。它还省略了名称以~结尾的文件或目录，而不是其内容。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v("  repo/  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-exec")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("test")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("/.svn  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("/.git  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("/CVS  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-print")]),a._v("  –prune\n")])])]),s("p",[a._v("给定以下项目目录及其相关的SCM管理目录，高效地搜索项目的根")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("repo/project1/CVS\nrepo/gnu/project2/.svn\nrepo/gnu/project3/.svn\nrepo/gnu/project3/src/.svn\nrepo/project4/.git\n")])])]),s("hr"),a._v(" "),s("p",[a._v("在根目录下查找doc后缀的文件")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("sogrey@bogon 文档"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("$  "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" / "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" *.doc\nfind: 探测到文件系统循环；“/var/named/chroot/var/named” 是与 “/var/named” 相同的文件系统循环的一部分。\n/usr/share/cvs/contrib/intro.doc\n/usr/lib/python2.6/pdb.doc\n/lib/kbd/keymaps/i386/qwerty/no-latin1.doc\n")])])]),s("p",[a._v("将查找到的内容输出到res.txt")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("sogrey@bogon 文档"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("$  "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" / "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" *.doc "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-fprint")]),a._v(" res.txt  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 找到文件，输出到res.txt")]),a._v("\nfind: 探测到文件系统循环；“/var/named/chroot/var/named” 是与 “/var/named” 相同的文件系统循环的一部分。\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("sogrey@bogon 文档"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("$  "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" res.txt    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看输出结果")]),a._v("\n/usr/share/cvs/contrib/intro.doc\n/usr/lib/python2.6/pdb.doc\n/lib/kbd/keymaps/i386/qwerty/no-latin1.doc\n")])])]),s("p",[a._v("查找属于指定用户的文件")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("sogrey@bogon 文档"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("$  "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" / "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-user")]),a._v(" david "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-perm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("777")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查找属于用户david，并且权利是777的文件")]),a._v("\nfind: 探测到文件系统循环；“/var/named/chroot/var/named” 是与 “/var/named” 相同的文件系统循环的一部分。\n/wj/._主页logo魏杰it教育.jpg\nfind: “/proc/7990/task/7990/fd/5”: 没有那个文件或目录\nfind: “/proc/7990/task/7990/fdinfo/5”: 没有那个文件或目录\nfind: “/proc/7990/fd/5”: 没有那个文件或目录\nfind: “/proc/7990/fdinfo/5”: 没有那个文件或目录\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);