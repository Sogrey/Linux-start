(window.webpackJsonp=window.webpackJsonp||[]).push([[150],{468:function(t,s,v){"use strict";v.r(s);var _=v(14),n=Object(_.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"ip-网络配置工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ip-网络配置工具"}},[t._v("#")]),t._v(" ip - 网络配置工具")]),t._v(" "),s("p",[t._v("ip指令可以显示或操作路由、网路设备，设置路由策略和通道。")]),t._v(" "),s("p",[t._v("ip命令 用来显示或操纵Linux主机的路由、网络设备、策略路由和隧道，是Linux下较新的功能强大的网络配置工具。")]),t._v(" "),s("h2",{attrs:{id:"适用范围"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#适用范围"}},[t._v("#")]),t._v(" 适用范围")]),t._v(" "),s("div",{staticClass:"svg redhat"},[t._v("RedHat")]),t._v(" "),s("div",{staticClass:"svg rhel"},[t._v("RHEL")]),t._v(" "),s("div",{staticClass:"svg ubuntu"},[t._v("Ubuntu")]),t._v(" "),s("div",{staticClass:"svg centos"},[t._v("CentOS")]),t._v(" "),s("div",{staticClass:"svg debian"},[t._v("Debian")]),t._v(" "),s("div",{staticClass:"svg deepin"},[t._v("Deepin")]),t._v(" "),s("div",{staticClass:"svg suse"},[t._v("SUSE")]),t._v(" "),s("div",{staticClass:"svg opensuse"},[t._v("openSUSE")]),t._v(" "),s("div",{staticClass:"svg fedora"},[t._v("Fedora")]),t._v(" "),s("div",{staticClass:"svg linuxmint"},[t._v("Linux Mint")]),t._v(" "),s("div",{staticClass:"svg alpinelinux"},[t._v("Alpine Linux")]),t._v(" "),s("div",{staticClass:"svg archlinux"},[t._v("Arch Linux")]),t._v(" "),s("h2",{attrs:{id:"语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("选项"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  OBJECT  COMMAND  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("help"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[t._v("OBJECT对象可以是：link，网络设备；addr，设备的协议地址；route，路由表；rule，策略；neigh，arp缓存；tunnel，ip通道；maddr，多播地址；mroute，多播路由")]),t._v(" "),s("p",[t._v("COMMAND是操作命令，不同的对象有不同的命令配置。")]),t._v(" "),s("p",[t._v("link对象支持的命令：set、show。")]),t._v(" "),s("p",[t._v("addr对象支持的命令：add、del、flush、show。")]),t._v(" "),s("p",[t._v("route对象支持的命令：list、flush、get、add、del、change、append、replace、monitor。")]),t._v(" "),s("p",[t._v("rule对象支持的命令：list、add、del、flush。")]),t._v(" "),s("p",[t._v("neigh对象支持的命令：add、del、change、replace、show、flush。")]),t._v(" "),s("p",[t._v("tunnel对象支持的命令：add、change、del、show。")]),t._v(" "),s("p",[t._v("maddr支持的命令：add、del。")]),t._v(" "),s("p",[t._v("mroute支持的命令：show")]),t._v(" "),s("h2",{attrs:{id:"选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[t._v("#")]),t._v(" 选项")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("-s, -stats, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-statistics")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示详细的信息")]),t._v("\n-f, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-family")]),t._v("                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定协议类型")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-4")]),t._v("                            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 等同-family inet")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-6")]),t._v("                            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 等同-family inet6")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-0")]),t._v("                            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 等同-family link")]),t._v("\n-o, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-oneline")]),t._v("                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 每条记录输出一行")]),t._v("\n-r, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-resove")]),t._v("                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用系统名字解析DNS ")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--help")]),t._v("                           "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示帮助文档")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--version")]),t._v("                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示命令版本信息")]),t._v("\n")])])]),s("h2",{attrs:{id:"ip-link-网络设备配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ip-link-网络设备配置"}},[t._v("#")]),t._v(" ip link---网络设备配置")]),t._v(" "),s("p",[t._v("链路是一种网络设备，相应的命令显示和改变设备的状态。")]),t._v(" "),s("p",[t._v("1）"),s("strong",[t._v("ip link set")]),t._v("，改变设备属性")]),t._v(" "),s("p",[s("strong",[t._v("dev")]),t._v(" NAME (default)，NAME指定要操作的网络设备。配置SR-IOV虚拟功能(VF)设备时，此关键字应指定关联的物理功能(PF)设备。")]),t._v(" "),s("p",[s("strong",[t._v("up")]),t._v("，"),s("strong",[t._v("down")]),t._v("，改变设备的状态，开或者关。")]),t._v(" "),s("p",[s("strong",[t._v("arp on")]),t._v("，"),s("strong",[t._v("arp off")]),t._v("，更改设备的NOARP标志。")]),t._v(" "),s("p",[s("strong",[t._v("multicast on")]),t._v("，"),s("strong",[t._v("multicast off")]),t._v("，更改设备的MULTICAST标志。")]),t._v(" "),s("p",[s("strong",[t._v("dynamic on")]),t._v("，"),s("strong",[t._v("dynamic off")]),t._v("，更改设备的DYNAMIC标志。")]),t._v(" "),s("p",[s("strong",[t._v("name")]),t._v(" NAME，更改设备的名字，如果设备正在运行或者已经有一个配置好的地址，那么操作无效。")]),t._v(" "),s("p",[s("strong",[t._v("txqueuelen")]),t._v(" NUMBER，"),s("strong",[t._v("txqlen")]),t._v(" NUMBER，更改设备发送队列的长度。")]),t._v(" "),s("p",[s("strong",[t._v("mtu")]),t._v(" NUMBER，更改设备MTU。")]),t._v(" "),s("p",[s("strong",[t._v("address")]),t._v(" LLADDRESS，更改接口的站点地址")]),t._v(" "),s("p",[s("strong",[t._v("broadcast")]),t._v(" LLADDRESS，"),s("strong",[t._v("brd")]),t._v(" LLADDRESS，"),s("strong",[t._v("peer")]),t._v(" LLADDRESS，当接口为POINTOPOINT时，更改链路层广播地址或对等地址。")]),t._v(" "),s("p",[s("strong",[t._v("netns")]),t._v(" PID，将设备移动到与进程PID关联的网络命名空间")]),t._v(" "),s("p",[s("strong",[t._v("alias")]),t._v(" NAME，给设备一个符号名以便于参考")]),t._v(" "),s("p",[s("strong",[t._v("vf")]),t._v(" NUM，指定要配置的虚拟功能设备。必须使用dev参数指定关联的pf设备。")]),t._v(" "),s("p",[t._v("警告：如果请求更改多个参数，则在任何更改失败后立即中止IP。这是IP能够将系统移动到不可预测状态的唯一情况。解决方案是避免使用一个ip链路集调用来更改多个参数。")]),t._v(" "),s("p",[t._v("2）"),s("strong",[t._v("ip link show")]),t._v("，显示设备属性")]),t._v(" "),s("p",[s("strong",[t._v("dev")]),t._v(" NAME (default)，NAME指定要显示的网络设备。如果省略此参数，则列出所有设备。")]),t._v(" "),s("p",[s("strong",[t._v("up")]),t._v("，只显示运行的设备。")]),t._v(" "),s("h2",{attrs:{id:"ip-address-协议地址管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ip-address-协议地址管理"}},[t._v("#")]),t._v(" ip address---协议地址管理")]),t._v(" "),s("p",[t._v("该地址是附加到网络设备上的协议(IP或IPv 6)地址。每个设备必须至少有一个地址才能使用相应的协议。可以将几个不同的地址附加到一个设备上。这些地址不受歧视，因此别名一词不太适合它们，我们在本文件中也没有使用它。"),s("strong",[t._v("ip addr")]),t._v("命令显示地址及其属性，添加新地址并删除旧地址。")]),t._v(" "),s("p",[t._v("1）"),s("strong",[t._v("ip address add")]),t._v("，增加新的协议地址")]),t._v(" "),s("p",[s("strong",[t._v("dev")]),t._v(" NAME，要向其添加地址的设备的名称。")]),t._v(" "),s("p",[s("strong",[t._v("local")]),t._v(" ADDRESS (default)，接口的地址。地址的格式取决于协议。它是一个用于IP的虚线四边形和一系列十六进制半字，用冒号分隔用于IPv 6。地址后面可以是斜杠和十进制数，它们编码网络前缀长度。")]),t._v(" "),s("p",[s("strong",[t._v("peer")]),t._v(" ADDRESS，点对点接口的远程端点的地址。同样，地址后面可以是斜杠和十进制数，编码网络前缀长度。如果指定了对等地址，则本地地址不能具有前缀长度。网络前缀与对等端相关联，而不是与本地地址相关联。")]),t._v(" "),s("p",[s("strong",[t._v("broadcast")]),t._v(" ADDRESS，接口的广播地址。可以使用特殊符号“和”-“代替广播地址。在这种情况下，通过设置/重置接口前缀的主机位来导出广播地址。")]),t._v(" "),s("p",[s("strong",[t._v("label")]),t._v(" NAME，每个地址都可以用标签字符串标记。为了保持与Linux2.0网络别名的兼容性，此字符串必须与设备名称重合，或者必须以设备名后跟冒号作为前缀。")]),t._v(" "),s("p",[s("strong",[t._v("scope")]),t._v(" SCOPE_VALUE，地址有效的区域的范围。可用的作用域列在文件“/etc/iproute2/rt_scopes“中。预定义的范围值是：")]),t._v(" "),s("p",[t._v("Ⅰ）"),s("strong",[t._v("global")]),t._v("，地址全局有效。")]),t._v(" "),s("p",[t._v("Ⅱ）"),s("strong",[t._v("site")]),t._v("，(仅IPv 6)该地址为站点本地地址，即该地址在此站点内有效。")]),t._v(" "),s("p",[t._v("Ⅲ）"),s("strong",[t._v("link")]),t._v("，该地址是本地链接，即它仅在此设备上有效。")]),t._v(" "),s("p",[t._v("Ⅳ）"),s("strong",[t._v("host")]),t._v("，该地址仅在此主机内有效。")]),t._v(" "),s("p",[t._v("2）"),s("strong",[t._v("ip address delete")]),t._v("，删除协议地址")]),t._v(" "),s("p",[s("strong",[t._v("Arguments")]),t._v(": 与“"),s("strong",[t._v("ip addr add")]),t._v("“的参数一致。设备名称是必需的参数。其余的都是可选的。如果没有提供参数，则删除第一个地址。")]),t._v(" "),s("p",[t._v("3）"),s("strong",[t._v("ip address show")]),t._v("，显示协议地址")]),t._v(" "),s("p",[s("strong",[t._v("dev")]),t._v(" NAME (default)，设备名字")]),t._v(" "),s("p",[s("strong",[t._v("scope")]),t._v(" SCOPE_VAL，仅列出具有此作用域的地址。")]),t._v(" "),s("p",[s("strong",[t._v("to")]),t._v(" PREFIX，仅列出匹配PREFIX的地址。")]),t._v(" "),s("p",[s("strong",[t._v("label")]),t._v(" PATTERN，只列出与模式匹配的标签的地址。")]),t._v(" "),s("p",[s("strong",[t._v("dynamic")]),t._v("，permanent，仅IPv 6)仅列出由于无状态地址配置而安装的地址，或只列出永久(非动态)地址。")]),t._v(" "),s("p",[s("strong",[t._v("tentative")]),t._v("，(仅IPv 6)仅列出未通过重复地址检测的地址。")]),t._v(" "),s("p",[s("strong",[t._v("deprecated")]),t._v("，(仅IPv 6)仅列出废弃地址")]),t._v(" "),s("p",[s("strong",[t._v("primary")]),t._v("，"),s("strong",[t._v("secondary")]),t._v("，只列出主(或辅助)地址。")]),t._v(" "),s("p",[t._v("4）"),s("strong",[t._v("ip address flush")]),t._v("，刷新协议地址")]),t._v(" "),s("p",[t._v("此命令刷新由某些条件选择的协议地址。此命令具有与Show相同的参数。不同之处在于，当不给出参数时，它不会运行。警告：这个命令(以及下面描述的其他刷新命令)非常危险。如果你犯了一个错误，它不会原谅它，而是会残酷地清除所有的地址。")]),t._v(" "),s("p",[t._v("使用**-** "),s("strong",[t._v("statistics")]),t._v("选项，命令变得详细。它打印出已删除地址的数量和为刷新地址列表而进行的轮次数。如果提供了两次此选项，则“"),s("strong",[t._v("ip addr flush")]),t._v("“也会以上一小节描述的格式转储所有已删除的地址。")]),t._v(" "),s("h2",{attrs:{id:"ip-addrlabel-协议地址标签管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ip-addrlabel-协议地址标签管理"}},[t._v("#")]),t._v(" ip addrlabel---协议地址标签管理")]),t._v(" "),s("p",[t._v("IPv 6地址标签用于RFC 3484中描述的地址选择。优先级由用户空间管理，只有标签存储在内核中。")]),t._v(" "),s("p",[t._v("1）"),s("strong",[t._v("ip addrlabel add")]),t._v("，增加地址标签")]),t._v(" "),s("p",[s("strong",[t._v("prefix")]),t._v(" PREFIX，"),s("strong",[t._v("dev")]),t._v(" DEV，输出接口。")]),t._v(" "),s("p",[s("strong",[t._v("label")]),t._v(" NUMBER，prefix的标签，0xffffffff保留。")]),t._v(" "),s("p",[t._v("2）"),s("strong",[t._v("ip addrlabel del")]),t._v("，删除地址标签")]),t._v(" "),s("p",[t._v("该命令删除内核中的一个地址标签条目。参数：与“**ip addrlabel add“**的参数一致，但不需要标签。")]),t._v(" "),s("p",[t._v("3）"),s("strong",[t._v("ip addrlabel list")]),t._v("，列出地址标签")]),t._v(" "),s("p",[t._v("显示地址标签的内容。")]),t._v(" "),s("p",[t._v("4）"),s("strong",[t._v("ip addrlabel flush")]),t._v("，刷新地址标签")]),t._v(" "),s("p",[t._v("刷新地址标签的内容，并且不保存默认设置。")]),t._v(" "),s("h2",{attrs:{id:"ip-neighbour-邻居-arp表管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ip-neighbour-邻居-arp表管理"}},[t._v("#")]),t._v(" ip neighbour---邻居/ARP表管理")]),t._v(" "),s("p",[t._v("邻居对象为共享相同链路的主机建立协议地址和链路层地址之间的绑定。邻接条目被组织成表。IPv 4邻居表的另一个名称是ARP表。相应的命令显示邻居绑定及其属性，添加新的邻居项并删除旧条目。")]),t._v(" "),s("p",[t._v("1）"),s("strong",[t._v("ip neighbour add")]),t._v("，增加邻居表")]),t._v(" "),s("p",[t._v("2）"),s("strong",[t._v("ip neighbour change")]),t._v("，改变已经存在的邻居表")]),t._v(" "),s("p",[t._v("3）"),s("strong",[t._v("ip neighbour replace")]),t._v("，增加一个表或者修改已经存在的表")]),t._v(" "),s("p",[t._v("这些命令创建新的邻居记录或更新现有记录。上面的三个命令使用方法如下:")]),t._v(" "),s("p",[s("strong",[t._v("to")]),t._v(" ADDRESS (default)，邻居的协议地址。它要么是IPv4，要么是IPv6地址。")]),t._v(" "),s("p",[s("strong",[t._v("dev")]),t._v(" NAME，连接到邻居的接口。")]),t._v(" "),s("p",[s("strong",[t._v("lladdr")]),t._v(" LLADDRESS，邻居的链路层地址，可以是null。")]),t._v(" "),s("p",[s("strong",[t._v("nud")]),t._v(" NUD_STATE，邻居的状态，可以是下面的值：")]),t._v(" "),s("p",[t._v("Ⅰ）"),s("strong",[t._v("permanent")]),t._v("，邻居项永远有效，只能内管理员删除。")]),t._v(" "),s("p",[t._v("Ⅱ）"),s("strong",[t._v("noarp")]),t._v("，邻居项有效。将不会尝试验证此条目，但可以在其生存期届满时删除该条目。")]),t._v(" "),s("p",[t._v("Ⅲ）"),s("strong",[t._v("reachable")]),t._v("，邻居项在可达超时过期之前是有效的。")]),t._v(" "),s("p",[t._v("Ⅳ）"),s("strong",[t._v("stale")]),t._v("，邻居的进入是有效的，但却是可疑的。如果邻居状态有效且此命令未更改地址，则此选项不会更改邻居状态。")]),t._v(" "),s("p",[t._v("4）"),s("strong",[t._v("ip neighbour delete")]),t._v("，删除邻居表")]),t._v(" "),s("p",[t._v("此命令使邻居项无效。这些参数与“"),s("strong",[t._v("ip neigh add")]),t._v("“相同，只是将忽略"),s("strong",[t._v("lladdr")]),t._v("和"),s("strong",[t._v("nud")]),t._v("。警告：试图删除或手动更改内核创建的noarp条目可能会导致不可预测的行为。特别是，即使在NOARP接口上，如果地址是多播或广播的，内核也可以尝试解析此地址。")]),t._v(" "),s("p",[t._v("5）"),s("strong",[t._v("ip neighbour show")]),t._v("，显示邻居表")]),t._v(" "),s("p",[s("strong",[t._v("to")]),t._v(" ADDRESS (default)，选择要列出的邻居的前缀")]),t._v(" "),s("p",[s("strong",[t._v("dev")]),t._v(" NAME，只列出与此设备相连的邻居")]),t._v(" "),s("p",[s("strong",[t._v("unused")]),t._v("，只列出当前未使用的邻居")]),t._v(" "),s("p",[s("strong",[t._v("nud")]),t._v(" NUD_STATE，只列出此状态中的相邻项。NUD_STATE接受下面列出的值或特殊值"),s("strong",[t._v("all")]),t._v("，这意味着所有状态。此选项可能发生不止一次。如果没有此选项，则IP列出除None和noarp以外的所有条目。")]),t._v(" "),s("p",[t._v("6）"),s("strong",[t._v("ip neighbour flush")]),t._v("，刷新邻居表")]),t._v(" "),s("p",[t._v("此命令刷新相邻表，根据某些条件选择要刷新的条目。此命令具有与"),s("strong",[t._v("show")]),t._v("相同的参数。不同之处在于，当不给出参数时，它不会运行，而要刷新的默认邻居状态不包括"),s("strong",[t._v("permanent")]),t._v("和"),s("strong",[t._v("noarp")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"ip-route-路由表管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ip-route-路由表管理"}},[t._v("#")]),t._v(" ip route—路由表管理")]),t._v(" "),s("p",[t._v("操纵内核路由表中的路由条目保存其他网络节点的路径信息。路由类型可以是：")]),t._v(" "),s("p",[t._v("Ⅰ）"),s("strong",[t._v("unicast")]),t._v("，路由条目描述到路由前缀所涵盖的目的地的实际路径。")]),t._v(" "),s("p",[t._v("Ⅱ）"),s("strong",[t._v("unreachable")]),t._v("，这些目的地是无法到达的。丢弃数据包，生成不可访问的ICMP消息主机。本地发件人得到一个EHOSTUNEACH错误。")]),t._v(" "),s("p",[t._v("Ⅲ）"),s("strong",[t._v("blackhole")]),t._v("，这些目的地是无法到达的。数据包被静默丢弃。本地发送者得到一个EINVAL错误")]),t._v(" "),s("p",[t._v("Ⅳ）"),s("strong",[t._v("prohibit")]),t._v("，这些目的地是无法到达的。丢弃数据包并生成ICMP消息通信，该ICMP消息通信在管理上被禁止。本地发件人得到一个EACCES错误。")]),t._v(" "),s("p",[t._v("Ⅴ）"),s("strong",[t._v("local")]),t._v("，目的地分配给此主机。数据包被环回并在本地传送。")]),t._v(" "),s("p",[t._v("Ⅵ）"),s("strong",[t._v("broadcast")]),t._v("，目的地是广播地址。数据包作为链路广播发送。")]),t._v(" "),s("p",[t._v("Ⅶ）"),s("strong",[t._v("throw")]),t._v("，与策略规则一起使用的特殊控制路径。如果选择这样的路由，则将终止此表中的查找，假装没有找到路由。如果没有策略路由，则相当于路由表中没有路由。丢包并生成不可到达的ICMP消息网。本地发送者得到一个ENETUNEACH错误。")]),t._v(" "),s("p",[t._v("Ⅷ）"),s("strong",[t._v("nat")]),t._v("，一条特殊的NAT路线。前缀覆盖的目的地被认为是虚拟地址(或外部地址)，需要在转发之前转换为真实地址(或内部地址)。选择要转换到的地址，并附带属性警告：Linux2.6中不再支持路由NAT。")]),t._v(" "),s("p",[t._v("Ⅸ）"),s("strong",[t._v("via")]),t._v("，"),s("strong",[t._v("anycast")]),t._v("，未实现目标是分配给此主机的任意广播地址。它们主要等同于本地地址，但有一个不同之处：当将这些地址用作任何数据包的源地址时，这些地址是无效的。")]),t._v(" "),s("p",[s("strong",[t._v("multicast")]),t._v("，用于多播路由的一种特殊类型。它不存在于普通路由表中。")]),t._v(" "),s("p",[t._v("路由表：Linux-2.x可以将路由打包到从1到255范围内的数字标识的多个路由表中，或者根据文件/etc/iucte 2/rt_tables的名称，默认情况下，所有普通路由都插入主表(ID 254)，内核只在计算路由时使用此表。实际上，另一个表总是存在的，这是不可见的，但更重要的是。它是本地表(ID 255)。此表由本地地址和广播地址的路由组成。内核自动维护这个表，管理员通常不需要修改它，甚至不需要查看它。使用策略路由时，多个路由表进入游戏。")]),t._v(" "),s("p",[t._v("1）"),s("strong",[t._v("ip route add")]),t._v("，增加路由")]),t._v(" "),s("p",[t._v("2）"),s("strong",[t._v("ip route change")]),t._v("，修改路由")]),t._v(" "),s("p",[t._v("3）"),s("strong",[t._v("ip route replace")]),t._v("，改变或者增加路由")]),t._v(" "),s("p",[s("strong",[t._v("to")]),t._v(" TYPE PREFIX (default)，路由的目标前缀。如果省略类型，则IP采用类型单播。以上列出了其他类型的值。前缀是一个IP或IPv 6地址，后面有斜杠和前缀长度。如果前缀的长度丢失，则IP将采用全长主机路由.还有一个特殊的前缀默认值-相当于“**IP 0/0“**或者”"),s("strong",[t._v("to IPv6 ::/0“")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("tos")]),t._v(" TOS，"),s("strong",[t._v("dsfield")]),t._v(" TOS，服务类型(TOS)密钥。该密钥没有关联的掩码，最长的匹配被理解为：首先，比较路由和数据包的TOS。如果它们不相等，那么数据包仍然可以匹配为零TOS的路由。TOS要么是8位十六进制数字，要么是“"),s("strong",[t._v("/etc/iproute2/rt_dsfield")]),t._v("“中的标识符。")]),t._v(" "),s("p",[s("strong",[t._v("metric")]),t._v(" NUMBER，"),s("strong",[t._v("preference")]),t._v(" NUMBER，路由的首选值。NUMBER是任意32位数。")]),t._v(" "),s("p",[s("strong",[t._v("table")]),t._v(" TABLEID，要添加此路由的表。TABLEID可能是文件**“/etc/iproute2/rt_tables“**中的一个数字或字符串。如果省略此参数，则IP假定主表，但本地路由、广播路由和NAT路由除外，默认情况下这些路由被放入本地表中。")]),t._v(" "),s("p",[s("strong",[t._v("dev")]),t._v(" NAME，输出设备名字。")]),t._v(" "),s("p",[s("strong",[t._v("via")]),t._v(" ADDRESS，下一个路由器的地址。实际上，这个字段的意义取决于路由类型。对于普通单播路由，它要么是真正的下一跳路由器，要么是安装在BSD兼容模式下的直接路由，它可以是接口的本地地址。对于NAT路由，它是已翻译的IP目的地块的第一个地址。")]),t._v(" "),s("p",[s("strong",[t._v("src")]),t._v(" ADDRESS，发送到路由前缀所涵盖的目的地时要首选的源地址。")]),t._v(" "),s("p",[s("strong",[t._v("realm")]),t._v(" REALMID，指定此路由的域。REALMID可能是文件“"),s("strong",[t._v("/etc/iproute2/rt_realms")]),t._v("“中的一个数字或字符串。")]),t._v(" "),s("p",[s("strong",[t._v("mtu")]),t._v(" MTU，"),s("strong",[t._v("mtu")]),t._v(" "),s("strong",[t._v("lock")]),t._v(" MTU，沿着到达目的地的路径的MTU。如果未使用修饰符锁，则由于路径MTU发现，内核可能更新MTU。如果使用修饰符锁，则不会尝试路径MTU发现，所有数据包都将在IPv4情况下不使用DF位发送，或者在IPv6中碎片到MTU。")]),t._v(" "),s("p",[s("strong",[t._v("window")]),t._v(" NUMBER，TCP向这些目的地广告的最大窗口，以字节为单位。它限制了TCP对等点允许发送给我们的最大数据突发。")]),t._v(" "),s("p",[s("strong",[t._v("rtt")]),t._v(" TIME，最初的RTT(‘往返时间’)估计。如果没有指定后缀，则单元是直接传递给路由代码的原始值，以保持与以前版本的兼容性。否则，如果使用s、sec或secs后缀指定秒，使用ms、msec或msecs指定毫秒。")]),t._v(" "),s("p",[s("strong",[t._v("rttvar")]),t._v(" TIME (2.3.15+ only)，初始RTT方差估计。值与上述RTT指定的值相同。")]),t._v(" "),s("p",[s("strong",[t._v("rto_min")]),t._v(" TIME (2.6.23+ only)，与此目标通信时要使用的最小TCP重传超时。值与上述RTT指定的值相同。")]),t._v(" "),s("p",[s("strong",[t._v("ssthresh")]),t._v(" NUMBER (2.3.15+ only)，初始慢启动阈值的估计。")]),t._v(" "),s("p",[s("strong",[t._v("cwnd")]),t._v(" NUMBER (2.3.15+ only)，阻塞窗口的夹子。如果不使用锁标志，则忽略它")]),t._v(" "),s("p",[s("strong",[t._v("initcwnd")]),t._v(" NUMBER，TCP连接的MSS中的最大初始拥塞窗口(CWND)大小。")]),t._v(" "),s("p",[s("strong",[t._v("initrwnd")]),t._v(" NUMBER (2.6.33+ only)，连接到此目标的初始接收窗口大小。实际窗口大小是此值乘以连接的MSS。默认值为零，意味着使用慢速开始值。")]),t._v(" "),s("p",[s("strong",[t._v("advmss")]),t._v(" NUMBER (2.3.15+ only)，MSS(“最大段大小”)在建立TCP连接时向这些目的地做广告。如果未给出，Linux将使用从第一跳设备MTU中计算出来的默认值。(如果到达这些目的地的路径是不对称的，则这种猜测可能是错误的。)")]),t._v(" "),s("p",[s("strong",[t._v("reordering")]),t._v(" NUMBER (2.3.15+ only)，到达此目标的路径上的最大重排序。如果未给出，Linux将使用sysctl变量“"),s("strong",[t._v("net/ipv4/tcp_reordering")]),t._v("“所选择的值。")]),t._v(" "),s("p",[s("strong",[t._v("nexthop")]),t._v(" NEXTHOP，多径路径的下一个。NEXTHOP是一个复杂的值，其语法类似于顶级参数列表：")]),t._v(" "),s("p",[t._v("Ⅰ）"),s("strong",[t._v("via")]),t._v(" ADDRESS，下一个路由器。")]),t._v(" "),s("p",[t._v("Ⅱ）"),s("strong",[t._v("dev")]),t._v(" NAME，输出设备")]),t._v(" "),s("p",[t._v("Ⅲ）"),s("strong",[t._v("weight")]),t._v(" NUMBER，是反映其相对带宽或质量的多径路由的此元素的权重。")]),t._v(" "),s("p",[s("strong",[t._v("scope")]),t._v(" SCOPE_VAL，路由前缀所涵盖的目的地的范围。SCOPE_VAL可以是文件“"),s("strong",[t._v("/etc/iproute2/rt_scopes")]),t._v("“中的一个数字或字符串。如果省略此参数，则IP假定所有网关单播路由的作用域全局、直接单播和广播路由的范围链接以及本地路由的范围主机。")]),t._v(" "),s("p",[s("strong",[t._v("protocol")]),t._v(" RTPROTO，此路由的路由协议标识符。RTPROTO可以是文件“"),s("strong",[t._v("/etc/iproute2/rt_protos")]),t._v("“中的一个数字或字符串。如果未给出路由协议ID，则IP假定协议启动(即假定路由是由不了解他们正在做的事情的人添加的)。一些协议值有固定的解释：")]),t._v(" "),s("p",[t._v("Ⅰ）"),s("strong",[t._v("redirect")]),t._v("，该路由是由于icmp重定向而安装的。")]),t._v(" "),s("p",[t._v("Ⅱ）"),s("strong",[t._v("kernel")]),t._v("，该路由是由内核在自动配置期间安装的。")]),t._v(" "),s("p",[t._v("Ⅲ）"),s("strong",[t._v("boot")]),t._v("，该路由是在启动过程中安装的。如果路由守护进程启动，它将清除所有这些守护进程。")]),t._v(" "),s("p",[t._v("Ⅳ）"),s("strong",[t._v("static")]),t._v("，管理员安装了该路由以覆盖动态路由。路由守护进程将尊重它们，甚至可能会向其对等方发布广告。")]),t._v(" "),s("p",[t._v("Ⅴ）"),s("strong",[t._v("ra")]),t._v("，路由是由路由器发现协议安装的。")]),t._v(" "),s("p",[s("strong",[t._v("onlink")]),t._v("，假装Nextthop直接连接到此链接，即使它不匹配任何接口前缀。")]),t._v(" "),s("p",[s("strong",[t._v("equalize")]),t._v("，允许在多径路由上逐包随机化。如果没有这个修饰符，路由将被冻结到一个选定的下一个，这样负载拆分将只发生在每个流基上。只有当内核被修补时，均衡化才能工作。")]),t._v(" "),s("p",[t._v("4）"),s("strong",[t._v("ip route delete")]),t._v("，删除路由")]),t._v(" "),s("p",[t._v("“"),s("strong",[t._v("ip route del")]),t._v("“与”"),s("strong",[t._v("ip route add")]),t._v("“具有相同的参数，但它们的语义略有不同。键值(to、tos、首选项和表)选择要删除的路由。如果存在可选属性，则IP验证它们是否与要删除的路由的属性一致。如果没有找到具有给定密钥和属性的路由，则”"),s("strong",[t._v("ip route del")]),t._v("“将失败")]),t._v(" "),s("p",[t._v("5）"),s("strong",[t._v("ip route show")]),t._v("，显示路由")]),t._v(" "),s("p",[s("strong",[t._v("to")]),t._v(" SELECTOR (default)，仅从给定的目的地范围中选择路由。SELECTOR由一个可选修饰符("),s("strong",[t._v("root")]),t._v("、"),s("strong",[t._v("match")]),t._v("、"),s("strong",[t._v("exact")]),t._v(")和一个前缀组成。root选择前缀不小于PREFIX的路由。例如，“"),s("strong",[t._v("root 0/0")]),t._v(" “选择整个路由表。match选择前缀长度不超过PREFIX的路由。例如，”"),s("strong",[t._v("match  10.0/16")]),t._v("“选择10.0/16、10/8和0/0，但未选择10.1/16和10.0.0/24。exact(或仅仅前缀)选择具有此前缀的路由。如果这两个选项都没有出现，则IP假设为根0/0，即它列出了整个表。")]),t._v(" "),s("p",[s("strong",[t._v("tos")]),t._v(" TOS，只选择具有给定tos的路由。")]),t._v(" "),s("p",[s("strong",[t._v("table")]),t._v(" TABLEID，显示此表中的路线。默认设置是显示tablemain。TABLEID可以是实表的ID，也可以是特殊值之一：")]),t._v(" "),s("p",[t._v("Ⅰ）"),s("strong",[t._v("all")]),t._v("，列出所有的表。")]),t._v(" "),s("p",[t._v("Ⅱ）"),s("strong",[t._v("cache")]),t._v("，备份路由缓存。")]),t._v(" "),s("p",[s("strong",[t._v("cloned")]),t._v("，"),s("strong",[t._v("cached")]),t._v("，列出克隆的路由，即由于某些路由属性(F.E)而从其他路由动态分叉的路由。(MTU)已更新。实际上，它等同于“"),s("strong",[t._v("table cache")]),t._v("“。")]),t._v(" "),s("p",[s("strong",[t._v("from")]),t._v(" SELECTOR，语法与"),s("strong",[t._v("to")]),t._v("相同，但它绑定源地址范围而不是目的地。请注意，FROM选项仅适用于克隆路由。")]),t._v(" "),s("p",[s("strong",[t._v("protocol")]),t._v(" RTPROTO，仅列出此路由的协议。")]),t._v(" "),s("p",[s("strong",[t._v("scope")]),t._v(" SCOPE_VAL，仅列出具有此范围的路由")]),t._v(" "),s("p",[s("strong",[t._v("type")]),t._v(" TYPE，只列出此类型的路由。")]),t._v(" "),s("p",[s("strong",[t._v("dev")]),t._v(" NAME，只列出经过此设备的路由")]),t._v(" "),s("p",[s("strong",[t._v("via")]),t._v(" PREFIX，只列出通过前缀选择的下一个路由器的路由")]),t._v(" "),s("p",[s("strong",[t._v("src")]),t._v(" PREFIX，只列出由前缀选择的首选源地址的路由。")]),t._v(" "),s("p",[s("strong",[t._v("realm")]),t._v(" REALMID，"),s("strong",[t._v("realms")]),t._v(" FROMREALM/TOREALM，只列出这些领域的路由。")]),t._v(" "),s("p",[t._v("6）"),s("strong",[t._v("ip route flush")]),t._v("，刷新路由表")]),t._v(" "),s("p",[t._v("此命令刷新由某些标准选择的路由，参数具有与“"),s("strong",[t._v("ip route show")]),t._v("“的参数相同的语法和语义，但是路由表没有列出，而是被清除。唯一的区别是默认操作：显示转储所有IP主路由表，但刷新打印助手页。")]),t._v(" "),s("p",[t._v("使用“"),s("strong",[t._v("-statistics")]),t._v("“选项，命令变得详细。它打印出已删除路由的数目和刷新路由表的轮数。如果该选项被给予两次，IP路由刷新也会以上一小节描述的格式转储所有已删除的路由。")]),t._v(" "),s("p",[t._v("7）"),s("strong",[t._v("ip route get")]),t._v("，获取一个单独的路由")]),t._v(" "),s("p",[t._v("此命令获取一条到达目标的路由，并按照内核所看到的那样打印其内容。")]),t._v(" "),s("p",[s("strong",[t._v("to")]),t._v(" ADDRESS (default)，目标地址。")]),t._v(" "),s("p",[s("strong",[t._v("from")]),t._v(" ADDRESS，源地址。")]),t._v(" "),s("p",[s("strong",[t._v("tos")]),t._v(" TOS，"),s("strong",[t._v("dsfield")]),t._v(" TOS，服务类型。")]),t._v(" "),s("p",[s("strong",[t._v("iif")]),t._v(" NAME，预期将从该包到达的设备。")]),t._v(" "),s("p",[s("strong",[t._v("oif")]),t._v(" NAME，强制将此数据包路由的输出设备。")]),t._v(" "),s("p",[s("strong",[t._v("connected")]),t._v("，如果没有提供源地址(选项从)，则重新查找从第一次查找中接收到的源设置为首选地址的路由。如果使用策略路由，则可能是不同的路由。")]),t._v(" "),s("p",[t._v("请注意，此操作不等同于“"),s("strong",[t._v("ip route show")]),t._v("“。"),s("strong",[t._v("show")]),t._v("显示现有路线。如果必要的话，"),s("strong",[t._v("get")]),t._v("解决它们并创建新的克隆。")]),t._v(" "),s("h2",{attrs:{id:"ip-rule-路由策略数据库管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ip-rule-路由策略数据库管理"}},[t._v("#")]),t._v(" ip rule---路由策略数据库管理")]),t._v(" "),s("p",[t._v("rule规则在路由策略数据库中控制路由选择算法。Internet中使用的经典路由算法只根据数据包的目的地地址(理论上，而不是实际中的TOS字段)进行路由决策。在某些情况下，我们希望通过不同的方式路由数据包，这不仅取决于目的地地址，还取决于其他数据包字段：源地址、IP协议、传输协议端口，甚至包有效负载。此任务称为“策略路由”。为了解决这一问题，传统的基于目标的路由表按照最长的匹配规则排序，被替换为“路由策略数据库”(RPDB)，该数据库通过执行一组规则来选择路由。")]),t._v(" "),s("p",[t._v("每个策略路由规则由一个选择器和一个动作谓词组成。RPDB按照增加优先级的顺序进行扫描。每个规则的选择器应用于{源地址、目标地址、传入接口、tos、fwmark}，如果选择器与数据包匹配，则执行操作。动作谓词可能会成功返回。在这种情况下，它将给出路由或故障指示，并终止RPDB查找。否则，RPDB程序将继续执行下一条规则。")]),t._v(" "),s("p",[t._v("语义上，自然动作是选择下一个和输出设备。在启动时，内核配置由三条规则组成的默认rpdb：")]),t._v(" "),s("p",[t._v("Ⅰ）Priority: 0。Selector：匹配任何内容，Action：查找本地路由表(ID 255)。本地表是包含本地地址和广播地址的高优先级控制路由的特殊路由表。")]),t._v(" "),s("p",[t._v("Ⅱ）Priority: 32766。Selector：匹配任何内容，Action：查找路由表主(ID 254)。主表是包含所有非策略路由的普通路由表.管理员可以删除和/或用其他规则重写此规则。")]),t._v(" "),s("p",[t._v("Ⅲ）Priority: 32767。Selector：匹配任何内容，Action：查找路由表默认值(ID 253)。默认表为空。如果没有先前的默认规则选择数据包，则保留用于某些后处理。这一规则也可以删除。")]),t._v(" "),s("p",[s("strong",[t._v("RPDB")]),t._v("可能包含以下类型的规则：")]),t._v(" "),s("p",[t._v("Ⅰ）"),s("strong",[t._v("unicast，该规则规定返回在规则引用的路由表中找到的路由。")])]),t._v(" "),s("p",[t._v("Ⅱ）"),s("strong",[t._v("blackhole")]),t._v("，这条规则规定要悄悄丢弃数据包。")]),t._v(" "),s("p",[t._v("Ⅲ）"),s("strong",[t._v("unreachable")]),t._v("，该规则规定生成“网络不可达”错误。")]),t._v(" "),s("p",[t._v("Ⅳ）"),s("strong",[t._v("prohibit")]),t._v("，该规则规定产生“在行政上禁止通信”错误。")]),t._v(" "),s("p",[t._v("Ⅴ）"),s("strong",[t._v("nat")]),t._v("，该规则规定将ip数据包的源地址转换为其他值。")]),t._v(" "),s("p",[t._v("1）"),s("strong",[t._v("ip rule add")]),t._v("，增加规则。")]),t._v(" "),s("p",[t._v("2）"),s("strong",[t._v("ip rule delete")]),t._v("，删除规则。")]),t._v(" "),s("p",[s("strong",[t._v("type")]),t._v(" TYPE (default)，这个规则的类型")]),t._v(" "),s("p",[s("strong",[t._v("from")]),t._v(" PREFIX，选择要匹配的源前缀")]),t._v(" "),s("p",[s("strong",[t._v("to")]),t._v(" PREFIX，选择要匹配的目标前缀")]),t._v(" "),s("p",[s("strong",[t._v("iif")]),t._v(" NAME，选择要匹配的传入设备。如果接口是回送的，则该规则只匹配来自此主机的数据包。这意味着您可以为转发包和本地数据包创建单独的路由表，从而完全隔离它们。")]),t._v(" "),s("p",[s("strong",[t._v("tos")]),t._v(" TOS，"),s("strong",[t._v("dsfield")]),t._v(" TOS，选择要匹配的TOS值。")]),t._v(" "),s("p",[s("strong",[t._v("fwmark")]),t._v(" MARK，选择要匹配的fwmark值。")]),t._v(" "),s("p",[s("strong",[t._v("priority")]),t._v(" PREFERENCE，这条规则的优先级。每个规则都应该有一个显式设置的唯一优先级值。选项、偏好和顺序是优先级的同义词。")]),t._v(" "),s("p",[s("strong",[t._v("table")]),t._v(" TABLEID，如果规则选择器匹配，则查找路由表标识符。还可以使用查找而不是表。")]),t._v(" "),s("p",[s("strong",[t._v("realms")]),t._v(" FROM/TO，规则匹配和路由表查找成功时要选择的区域。只有当路由没有选择任何领域时，才使用要使用的领域。")]),t._v(" "),s("p",[s("strong",[t._v("nat")]),t._v(" ADDRESS，要翻译的IP地址块的基(用于源地址)。该地址可以是NAT地址块的开始(由NAT路由选择)，也可以是本地主机地址(甚至为零)。在最后一种情况下，路由器不会翻译数据包，而是将它们伪装成这个地址。使用map-to而不是nat意味着同样的事情。")]),t._v(" "),s("p",[t._v("3）"),s("strong",[t._v("ip rule flush")]),t._v("，刷新规则，还转储所有已删除的规则。")]),t._v(" "),s("p",[t._v("没有参数。")]),t._v(" "),s("p",[t._v("4）"),s("strong",[t._v("ip rule show")]),t._v("，显示规则")]),t._v(" "),s("p",[t._v("没有参数。")]),t._v(" "),s("h2",{attrs:{id:"ip-maddress-多播地址管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ip-maddress-多播地址管理"}},[t._v("#")]),t._v(" ip maddress---多播地址管理")]),t._v(" "),s("p",[t._v("1）"),s("strong",[t._v("ip maddress show")]),t._v("，显示多播地址")]),t._v(" "),s("p",[s("strong",[t._v("dev")]),t._v(" NAME (default)，设备名字")]),t._v(" "),s("p",[t._v("2）"),s("strong",[t._v("ip maddress add")]),t._v("，增加多播地址")]),t._v(" "),s("p",[t._v("3）"),s("strong",[t._v("ip maddress delete")]),t._v("，删除多播地址")]),t._v(" "),s("p",[t._v("这些命令附加/分离一个静态链路层多播地址，以便在接口上侦听。请注意，不可能静态地加入协议多播组。此命令仅管理链接层地址")]),t._v(" "),s("p",[s("strong",[t._v("address")]),t._v(" LLADDRESS (default)，链路层多播地址。")]),t._v(" "),s("p",[s("strong",[t._v("dev")]),t._v(" NAME，加入/删除多播地址的设备")]),t._v(" "),s("h2",{attrs:{id:"ip-mroute-多播路由缓存管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ip-mroute-多播路由缓存管理"}},[t._v("#")]),t._v(" ip mroute---多播路由缓存管理")]),t._v(" "),s("p",[t._v("mroute对象是由用户级mrouting守护进程创建的多播路由缓存条目。由于组播路由引擎当前接口的局限性，无法对多播路由对象进行管理更改，因此只能显示对象")]),t._v(" "),s("p",[s("strong",[t._v("ip mroute show")]),t._v("，列出mroute缓存项")]),t._v(" "),s("p",[s("strong",[t._v("to")]),t._v(" PREFIX (default)，选择要列出的目标多播地址的前缀。")]),t._v(" "),s("p",[s("strong",[t._v("iif")]),t._v(" NAME，接收多播数据包的接口。")]),t._v(" "),s("p",[s("strong",[t._v("from")]),t._v(" PREFIX，选择多播路由的IP源地址的前缀")]),t._v(" "),s("h2",{attrs:{id:"ip-tunnel-通道配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ip-tunnel-通道配置"}},[t._v("#")]),t._v(" ip tunnel---通道配置")]),t._v(" "),s("p",[s("strong",[t._v("tunnel")]),t._v("对象是隧道，它将数据包封装在IP包中，然后通过IP基础结构发送。加密(或外部)地址族由“-f“选项指定。默认的是ipv4。")]),t._v(" "),s("p",[t._v("1）ip tunnel add，增加一个新隧道")]),t._v(" "),s("p",[t._v("2）ip tunnel change，修改一个已经存在的隧道")]),t._v(" "),s("p",[t._v("3）ip tunnel delete，删除隧道")]),t._v(" "),s("p",[s("strong",[t._v("name")]),t._v(" NAME (default)，隧道设备名字。")]),t._v(" "),s("p",[s("strong",[t._v("mode")]),t._v(" MODE，设置隧道模式。可用的模式取决于封装地址系列。IPv 4封装可用的模式：ipip、SIT、isatap和grep；IPv6封装的模式：ip6ip6、ipip6和any。")]),t._v(" "),s("p",[s("strong",[t._v("remote")]),t._v(" ADDRESS，设置隧道的远程端点")]),t._v(" "),s("p",[s("strong",[t._v("local")]),t._v(" ADDRESS，设置隧道数据包的固定本地地址。它必须是此主机的另一个接口上的地址。")]),t._v(" "),s("p",[s("strong",[t._v("ttl")]),t._v(" N，在隧道化的数据包上设置固定的TTL N。N是介于1-255范围内的一个数字.0是一个特殊值，意味着数据包继承TTL值。IPv 4隧道的默认值是：Inherence。IPv6隧道的默认值是：64。")]),t._v(" "),s("p",[s("strong",[t._v("tos")]),t._v(" T，"),s("strong",[t._v("dsfield")]),t._v(" T，"),s("strong",[t._v("tclass")]),t._v(" T，在隧道数据包上设置固定的TOS(或IPv 6中的流量类)T。默认值是：inherit。")]),t._v(" "),s("p",[s("strong",[t._v("dev")]),t._v(" NAME，将隧道绑定到设备名称，以便隧道数据包只能通过此设备路由，并且在到达端点的路由发生更改时无法逃逸到另一个设备。")]),t._v(" "),s("p",[s("strong",[t._v("nopmtudisc")]),t._v("，禁用此隧道上的路径MTU发现。默认情况下启用它。请注意，固定的ttl与此选项不兼容：使用固定的ttl进行隧道操作总是会使pmtu发现。")]),t._v(" "),s("p",[s("strong",[t._v("key")]),t._v(" K**，ikey** K**，okey** K，(只有GRE隧道)使用键控GRE与密钥K，K要么是一个数字或一个类似IP地址的虚线四边形。key参数设置在两个方向上使用的键。ikey和okey参数为输入和输出设置不同的键。")]),t._v(" "),s("p",[s("strong",[t._v("csum, icsum, ocsum")]),t._v("，(只有GRE隧道)生成/要求隧道数据包的校验和。"),s("strong",[t._v("ocsum")]),t._v("标志计算传出数据包的校验和。"),s("strong",[t._v("icsum")]),t._v("标志要求所有输入数据包都具有正确的校验和。"),s("strong",[t._v("csum")]),t._v("标志等效于组合"),s("strong",[t._v("icsum ocsum")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("seq, iseq, oseq")]),t._v("，(只有GRE隧道)序列化数据包。"),s("strong",[t._v("oseq")]),t._v("标志允许对传出数据包进行排序。"),s("strong",[t._v("iseq")]),t._v("标志要求对所有输入数据包进行序列化。seq标志等效于"),s("strong",[t._v("iseq oseq")]),t._v("组合。这不是工作。不要用它")]),t._v(" "),s("p",[s("strong",[t._v("dscp")]),t._v(" "),s("strong",[t._v("inherit")]),t._v("，(只有IPv 6隧道)在内部和外部报头之间继承DS字段")]),t._v(" "),s("p",[s("strong",[t._v("encaplim")]),t._v(" ELIM，设置固定的封装限制。缺省值为4")]),t._v(" "),s("p",[s("strong",[t._v("flowlabel")]),t._v(" FLOWLABEL，(只有IPv 6隧道)设置固定的流标签。")]),t._v(" "),s("p",[t._v("4）"),s("strong",[t._v("ip tunnel prl")]),t._v("，潜在路由器列表(只有ISATAP)")]),t._v(" "),s("p",[s("strong",[t._v("dev")]),t._v(" NAME，")]),t._v(" "),s("p",[s("strong",[t._v("prl-default")]),t._v(" ADDR，")]),t._v(" "),s("p",[s("strong",[t._v("prl-nodefault")]),t._v(" ADDR，")]),t._v(" "),s("p",[s("strong",[t._v("prl-delete")]),t._v(" ADDR，")]),t._v(" "),s("p",[t._v("添加或删除addr作为潜在的路由器或默认路由器")]),t._v(" "),s("p",[t._v("5）"),s("strong",[t._v("ip tunnel show")]),t._v("，列出隧道")]),t._v(" "),s("p",[t._v("没有参数")]),t._v(" "),s("h2",{attrs:{id:"ip-monitor-and-rtmon-状态监控"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ip-monitor-and-rtmon-状态监控"}},[t._v("#")]),t._v(" ip monitor and rtmon---状态监控")]),t._v(" "),s("p",[t._v("IP实用程序可以连续地监视设备、地址和路由的状态。此选项的格式略有不同。也就是说，监视器command是命令行中的第一个命令，然后对象列表如下：")]),t._v(" "),s("p",[s("strong",[t._v("ip  monitor  [ all,")]),t._v(" LISTofOBJECTS "),s("strong",[t._v("]")])]),t._v(" "),s("p",[t._v("OBJECT-LIST是我们要监视的对象类型的列表。它可能包含链接、地址和路由。如果没有提供文件参数，则IP将打开RTNETLINK，侦听该参数，并以前面部分描述的格式转储状态更改。")]),t._v(" "),s("p",[t._v("如果给定文件名，则不会侦听RTNETLINK，而是打开包含以二进制格式保存的RTNETLINK消息的文件，并将其转储。可以使用rtmon实用程序生成这样的历史文件。此实用程序具有类似于IP监视器的命令行语法。理想情况下，应该在发出第一个网络配置命令之前启动rtmon。例如，如果你在一个启动脚本中插入：")]),t._v(" "),s("p",[s("strong",[t._v("rtmon file /var/log/rtmon.log")])]),t._v(" "),s("p",[t._v("稍后您将能够查看完整的历史记录。当然，可以随时启动rtmon。它在历史记录的前面加上在启动时转储的状态快照。")]),t._v(" "),s("h2",{attrs:{id:"ip-xfrm-设置xfrm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ip-xfrm-设置xfrm"}},[t._v("#")]),t._v(" ip xfrm---设置xfrm")]),t._v(" "),s("p",[t._v("xfrm是一个IP框架，它可以转换数据报的格式，即用某种算法对数据包进行加密。xfrm策略和xfrm状态通过模板tmpl_list相关联。该框架被用作IPsec协议的一部分。")]),t._v(" "),s("p",[t._v("1）"),s("strong",[t._v("ip xfrm state add")]),t._v("，增加新的状态")]),t._v(" "),s("p",[t._v("2）"),s("strong",[t._v("ip xfrm state update")]),t._v("，更新已经存在的状态")]),t._v(" "),s("p",[t._v("3）"),s("strong",[t._v("ip xfrm state allocspi")]),t._v("，分配SPI数值")]),t._v(" "),s("p",[t._v("MODE，设置为默认传输，但可以设置为"),s("strong",[t._v("tunnel")]),t._v("，"),s("strong",[t._v("ro")]),t._v("或者"),s("strong",[t._v("beet")]),t._v("。")]),t._v(" "),s("p",[t._v("FLAG-LIST，包含一个或多个标志。")]),t._v(" "),s("p",[t._v("FLAG，可以设置为"),s("strong",[t._v("noecn")]),t._v("、"),s("strong",[t._v("decap-dscp")]),t._v("、"),s("strong",[t._v("wildrecv")])]),t._v(" "),s("p",[t._v("ENCAP，封装设置为封装类型ENCAP-TYPE、源端口SPORT、目标端口DPORT和OADDR。")]),t._v(" "),s("p",[t._v("ENCAP-TYPE，可以是"),s("strong",[t._v("espinudp")]),t._v("或者"),s("strong",[t._v("espinudp-nonike。")])]),t._v(" "),s("p",[t._v("ALGO-LIST，包含一个或多个算法Algo，该算法依赖于Algo_type设置的算法类型。它可以使用这些算法"),s("strong",[t._v("enc")]),t._v("、"),s("strong",[t._v("auth")]),t._v("、"),s("strong",[t._v("comp")]),t._v("。")]),t._v(" "),s("p",[t._v("4）"),s("strong",[t._v("ip xfrm policy add")]),t._v("，增加新策略")]),t._v(" "),s("p",[t._v("5）"),s("strong",[t._v("ip xfrm policy update")]),t._v("，更新已经存在的策略")]),t._v(" "),s("p",[t._v("6）"),s("strong",[t._v("ip xfrm policy delete")]),t._v("，删除存在的策略")]),t._v(" "),s("p",[t._v("7）"),s("strong",[t._v("ip xfrm policy get")]),t._v("，过去存在的策略")]),t._v(" "),s("p",[t._v("8）"),s("strong",[t._v("ip xfrm policy deleteall")]),t._v("，删除所有的xfrm策略")]),t._v(" "),s("p",[t._v("9）"),s("strong",[t._v("ip xfrm policy list")]),t._v("，打印策略列表")]),t._v(" "),s("p",[t._v("10）"),s("strong",[t._v("ip xfrm policy flush")]),t._v("，舒心策略")]),t._v(" "),s("p",[s("strong",[t._v("dir")]),t._v(" DIR，目录可以是"),s("strong",[t._v("inp")]),t._v("、"),s("strong",[t._v("out")]),t._v("、"),s("strong",[t._v("fwd")])]),t._v(" "),s("p",[t._v("SELECTOR，选择将设置策略的地址。选择器由源地址和目标地址定义。")]),t._v(" "),s("p",[t._v("UPSPEC，由源端口"),s("strong",[t._v("sport")]),t._v("、目的端口"),s("strong",[t._v("dport")]),t._v("、"),s("strong",[t._v("type")]),t._v("和"),s("strong",[t._v("code")]),t._v("定义。")]),t._v(" "),s("p",[s("strong",[t._v("dev")]),t._v(" DEV，指定网络设备。")]),t._v(" "),s("p",[s("strong",[t._v("index")]),t._v(" INDEX，索引策略的数量。")]),t._v(" "),s("p",[s("strong",[t._v("ptype")]),t._v(" PTYPE，默认是"),s("strong",[t._v("main")]),t._v("，可以切换为"),s("strong",[t._v("sub")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("action")]),t._v(" ACTION，默认是"),s("strong",[t._v("allow")]),t._v("，可以切换为"),s("strong",[t._v("block")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("priority")]),t._v(" PRIORITY，级别是一个数字，默认0。")]),t._v(" "),s("p",[t._v("LIMIT-LIST，限制以秒、字节或数据包数量为单位设置。")]),t._v(" "),s("p",[t._v("TMPL-LIST，模板列表基于"),s("strong",[t._v("ID")]),t._v("、"),s("strong",[t._v("mode")]),t._v("、"),s("strong",[t._v("reqid")]),t._v("、"),s("strong",[t._v("level。")])]),t._v(" "),s("p",[t._v("ID，由源地址、目标地址、proto和spi的值指定。")]),t._v(" "),s("p",[t._v("XFRM_PROTO，值可以是"),s("strong",[t._v("esp")]),t._v("、"),s("strong",[t._v("ah")]),t._v("、"),s("strong",[t._v("comp")]),t._v("、"),s("strong",[t._v("route2")]),t._v("、"),s("strong",[t._v("hao。")])]),t._v(" "),s("p",[t._v("MODE，默认"),s("strong",[t._v("transport")]),t._v(",，还可以是"),s("strong",[t._v("tunnel")]),t._v("，"),s("strong",[t._v("beet。")])]),t._v(" "),s("p",[t._v("LEVEL，默认"),s("strong",[t._v("required")]),t._v("，还可以是"),s("strong",[t._v("use。")])]),t._v(" "),s("p",[t._v("UPSPEC，由"),s("strong",[t._v("sport")]),t._v("、"),s("strong",[t._v("dport")]),t._v("、"),s("strong",[t._v("type")]),t._v("、"),s("strong",[t._v("code")]),t._v("指定。")]),t._v(" "),s("p",[t._v("11）"),s("strong",[t._v("ip xfrm monitor")]),t._v("，用于列出所有对象或定义的对象组。")]),t._v(" "),s("p",[s("strong",[t._v("xfrm monitor")]),t._v("可以监视所有对象或其中定义的组的策略。")]),t._v(" "),s("h2",{attrs:{id:"ip-token"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ip-token"}},[t._v("#")]),t._v(" ip token")]),t._v(" "),s("p",[t._v("IPv 6令牌化接口标识支持用于向节点分配众所周知的主机部分地址，同时仍然从路由器广告获得全局网络前缀。令牌标识符的主要目标是服务器平台，其中的地址通常是手动配置的，而不是使用DHCPv 6或SLAAC。通过使用令牌化标识符，主机仍然可以使用SLAAC确定其网络前缀，但如果其网络前缀更改，则更容易自动重新编号[1]。")]),t._v(" "),s("p",[t._v("1）"),s("strong",[t._v("ip token set")]),t._v("，设置接口令牌")]),t._v(" "),s("p",[t._v("TOKEN，接口标识符令牌地址")]),t._v(" "),s("p",[s("strong",[t._v("dev")]),t._v(" DEV，网络接口")]),t._v(" "),s("p",[t._v("2）"),s("strong",[t._v("ip token get")]),t._v("，从内核获取接口令牌")]),t._v(" "),s("p",[t._v("显示特定网络设备的令牌化接口标识符。参数：与“**ip token set”**的参数一致，但必须省略该令牌。")]),t._v(" "),s("p",[t._v("3）"),s("strong",[t._v("ip token list")]),t._v("，列出所有接口令牌")]),t._v(" "),s("p",[t._v("列出内核中网络接口的所有令牌化接口标识符")]),t._v(" "),s("h2",{attrs:{id:"举例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#举例"}},[t._v("#")]),t._v(" 举例")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("link")]),t._v(" show                     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示网络接口信息")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("link")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" eth0 up             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开启网卡")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("link")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" eth0 down            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 关闭网卡")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("link")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" eth0 promisc on      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开启网卡的混合模式")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("link")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" eth0 promisc offi    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 关闭网卡的混个模式")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("link")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" eth0 txqueuelen "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1200")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置网卡队列长度")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("link")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" eth0 mtu "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1400")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置网卡最大传输单元")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" addr show     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示网卡IP信息")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" addr "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".0.1/24 dev eth0 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置eth0网卡IP地址192.168.0.1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" addr del "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".0.1/24 dev eth0 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除eth0网卡IP地址")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" route show "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示系统路由")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" route "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" default via "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".1.254   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置系统默认路由")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" route list                 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看路由信息")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" route "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".4.0/24  via  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".0.254 dev eth0 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置192.168.4.0网段的网关为192.168.0.254,数据走eth0接口")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" route "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" default via  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".0.254  dev eth0        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置默认网关为192.168.0.254")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" route del "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".4.0/24   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除192.168.4.0网段的网关")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" route del default          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除默认路由")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" route delete "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".1.0/24 dev eth0 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除路由")]),t._v("\n")])])]),s("p",[t._v("用ip命令显示网络设备的运行状态")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("link")]),t._v(" list\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(": lo: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("LOOPBACK,UP,LOWER_UP"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mtu "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16436")]),t._v(" qdisc noqueue\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(": eth0: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BROADCAST,MULTICAST,UP,LOWER_UP"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mtu "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1500")]),t._v(" qdisc pfifo_fast qlen "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n    link/ether 00:16:3e:00:1e:51 brd ff:ff:ff:ff:ff:ff\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(": eth1: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BROADCAST,MULTICAST,UP,LOWER_UP"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mtu "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1500")]),t._v(" qdisc pfifo_fast qlen "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n    link/ether 00:16:3e:00:1e:52 brd ff:ff:ff:ff:ff:ff\n")])])]),s("p",[t._v("显示更加详细的设备信息")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("link")]),t._v(" list\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(": lo: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("LOOPBACK,UP,LOWER_UP"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mtu "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16436")]),t._v(" qdisc noqueue\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    RX: bytes  packets  errors  dropped overrun mcast   \n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5082831")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("56145")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("      \n    TX: bytes  packets  errors  dropped carrier collsns\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5082831")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("56145")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("      \n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(": eth0: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BROADCAST,MULTICAST,UP,LOWER_UP"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mtu "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1500")]),t._v(" qdisc pfifo_fast qlen "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n    link/ether 00:16:3e:00:1e:51 brd ff:ff:ff:ff:ff:ff\n    RX: bytes  packets  errors  dropped overrun mcast   \n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3641655380")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("62027099")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("      \n    TX: bytes  packets  errors  dropped carrier collsns\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6155236")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("89160")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("      \n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(": eth1: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BROADCAST,MULTICAST,UP,LOWER_UP"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mtu "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1500")]),t._v(" qdisc pfifo_fast qlen "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n    link/ether 00:16:3e:00:1e:52 brd ff:ff:ff:ff:ff:ff\n    RX: bytes  packets  errors  dropped overrun mcast   \n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2562136822")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("488237847")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("      \n    TX: bytes  packets  errors  dropped carrier collsns\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3486617396")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9691081")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("    \n")])])]),s("p",[t._v("显示核心路由表")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" route list \n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("112.124")]),t._v(".12.0/22 dev eth1  proto kernel  scope "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("link")]),t._v("  src "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("112.124")]),t._v(".15.130\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.160")]),t._v(".0.0/20 dev eth0  proto kernel  scope "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("link")]),t._v("  src "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.160")]),t._v(".7.81\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".0.0/16 via "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.160")]),t._v(".15.247 dev eth0\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.16")]),t._v(".0.0/12 via "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.160")]),t._v(".15.247 dev eth0\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.0")]),t._v(".0.0/8 via "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.160")]),t._v(".15.247 dev eth0\ndefault via "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("112.124")]),t._v(".15.247 dev eth1\n")])])]),s("p",[t._v("显示邻居表")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" neigh list\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("112.124")]),t._v(".15.247 dev eth1 lladdr 00:00:0c:9f:f3:88 REACHABLE\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.160")]),t._v(".15.247 dev eth0 lladdr 00:00:0c:9f:f2:c0 STALE\n")])])]),s("p",[t._v("获取主机所有网络接口")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" link, "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-E")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^[0-9]'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" -F: "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{print $2}'")]),t._v("\n")])])]),s("p",[t._v("显示设备的各种协议地址")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" addr show    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#显示设备支持的协议的地址")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(": lo: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("LOOPBACK,UP,LOWER_UP"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mtu "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16436")]),t._v(" qdisc noqueue state UNKNOWN\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1/8 scope "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" lo\n    inet6 ::1/128 scope "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v("\n       valid_lft forever preferred_lft forever\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(": eth0: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BROADCAST,MULTICAST,UP,LOWER_UP"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mtu "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1500")]),t._v(" qdisc pfifo_fast state UP qlen "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n    link/ether 08:00:27:14:33:57 brd ff:ff:ff:ff:ff:ff\n    inet "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".1.9/24 brd "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".1.255 scope global eth0\n    inet6 fe80::a00:27ff:fe14:3357/64 scope "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("link")]),t._v("\n       valid_lft forever preferred_lft forever\n")])])]),s("p",[t._v("为目标设备添加地址")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" addr "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看帮助文档")]),t._v("\nUsage: "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" addr "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("add"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("change"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("replace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" IFADDR dev STRING "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" LIFETIME "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                                                      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" CONFFLAG-LIST"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" addr del IFADDR dev STRING\n       "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" addr "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("show"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("flush"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" dev STRING "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" scope SCOPE-ID "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" to PREFIX "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" FLAG-LIST "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" label PATTERN "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n \n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" addr "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".1.110 dev eth0      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#给eth0添加新的ip ")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" addr show dev eth0    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看eth0的地址信息，多了一个ip")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(": eth0: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BROADCAST,MULTICAST,UP,LOWER_UP"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mtu "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1500")]),t._v(" qdisc pfifo_fast state UP qlen "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n    link/ether 08:00:27:14:33:57 brd ff:ff:ff:ff:ff:ff\n    inet "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".1.9/24 brd "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".1.255 scope global eth0\n    inet "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".1.110/32 scope global eth0\n    inet6 fe80::a00:27ff:fe14:3357/64 scope "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("link")]),t._v("\n       valid_lft forever preferred_lft forever\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);