(window.webpackJsonp=window.webpackJsonp||[]).push([[119],{436:function(a,s,t){"use strict";t.r(s);var e=t(14),r=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"grep-强大的文本搜索工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#grep-强大的文本搜索工具"}},[a._v("#")]),a._v(" grep - 强大的文本搜索工具")]),a._v(" "),s("p",[a._v("grep （global search regular expression(RE) and print out the line，全面搜索正则表达式并把行打印出来）是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。用于过滤/搜索的特定字符。可使用正则表达式能配合多种命令使用，使用上十分灵活。")]),a._v(" "),s("h2",{attrs:{id:"适用范围"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#适用范围"}},[a._v("#")]),a._v(" 适用范围")]),a._v(" "),s("div",{staticClass:"svg redhat"},[a._v("RedHat")]),a._v(" "),s("div",{staticClass:"svg rhel"},[a._v("RHEL")]),a._v(" "),s("div",{staticClass:"svg ubuntu"},[a._v("Ubuntu")]),a._v(" "),s("div",{staticClass:"svg centos"},[a._v("CentOS")]),a._v(" "),s("div",{staticClass:"svg debian"},[a._v("Debian")]),a._v(" "),s("div",{staticClass:"svg deepin"},[a._v("Deepin")]),a._v(" "),s("div",{staticClass:"svg suse"},[a._v("SUSE")]),a._v(" "),s("div",{staticClass:"svg opensuse"},[a._v("openSUSE")]),a._v(" "),s("div",{staticClass:"svg fedora"},[a._v("Fedora")]),a._v(" "),s("div",{staticClass:"svg linuxmint"},[a._v("Linux Mint")]),a._v(" "),s("div",{staticClass:"svg alpinelinux"},[a._v("Alpine Linux")]),a._v(" "),s("div",{staticClass:"svg archlinux"},[a._v("Arch Linux")]),a._v(" "),s("h2",{attrs:{id:"语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[a._v("#")]),a._v(" 语法")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("选项"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("  PATTERN  files\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("OPTIONS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-e PATTERN "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" FILE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("FILE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),s("h2",{attrs:{id:"选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[a._v("#")]),a._v(" 选项")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--text")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 不要忽略二进制数据。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-A")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("显示行数"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("   --after-context"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("显示行数"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 除了显示符合范本样式的那一行之外，并显示该行之后的内容。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-b")]),a._v(" --byte-offset                           "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在显示符合范本样式的那一行之外，并显示该行之前的内容。")]),a._v("\n-B"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("显示行数"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("   --before-context"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("显示行数"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 除了显示符合样式的那一行之外，并显示该行之前的内容。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--count")]),a._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 计算符合范本样式的列数。")]),a._v("\n-C"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("显示行数"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--context")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("显示行数"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("或-"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("显示行数"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 除了显示符合范本样式的那一列之外，并显示该列之前后的内容。")]),a._v("\n-d"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("进行动作"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--directories")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("动作"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 当指定要查找的是目录而非文件时，必须使用这项参数，否则grep命令将回报信息并停止动作。")]),a._v("\n-e"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("范本样式"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--regexp")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("范本样式"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 指定字符串作为查找文件内容的范本样式。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-E")]),a._v(" --extended-regexp             "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将范本样式为延伸的普通表示法来使用，意味着使用能使用扩展正则表达式。")]),a._v("\n-f"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("范本文件"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--file")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("规则文件"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 指定范本文件，其内容有一个或多个范本样式，让grep查找符合范本条件的文件内容，格式为每一列的范本样式。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-F")]),a._v(" --fixed-regexp   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将范本样式视为固定字符串的列表。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-G")]),a._v(" --basic-regexp   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将范本样式视为普通的表示法来使用。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-h")]),a._v(" --no-filename    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在显示符合范本样式的那一列之前，不标示该列所属的文件名称。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" --with-filename  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在显示符合范本样式的那一列之前，标示该列的文件名称。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" --ignore-case    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 忽略字符大小写的差别。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),a._v(" --file-with-matches   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 列出文件内容符合指定的范本样式的文件名称。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-L")]),a._v(" --files-without-match "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 列出文件内容不符合指定的范本样式的文件名称。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" --line-number         "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在显示符合范本样式的那一列之前，标示出该列的编号。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-P")]),a._v(" --perl-regexp         "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# PATTERN 是一个 Perl 正则表达式")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-q")]),a._v(" --quiet或--silent     "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 不显示任何信息。")]),a._v("\n-R/-r  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--recursive")]),a._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 此参数的效果和指定“-d recurse”参数相同。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v(" --no-messages  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 不显示错误信息。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" --revert-match "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 反转查找。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-V")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示版本信息。   ")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-w")]),a._v(" --word-regexp  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 只显示全字符合的列。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-x")]),a._v(" --line-regexp  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 只显示全列符合的列。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 此参数效果跟“-i”相同。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 只输出文件中匹配到的部分。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-m")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("num"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" --max-count"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("num"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 找到num行结果后停止查找，用来限制匹配行数")]),a._v("\n")])])]),s("p",[s("strong",[a._v("规则表达式")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("^    # 锚定行的开始 如：'^grep'匹配所有以grep开头的行。    \n$    # 锚定行的结束 如：'grep$' 匹配所有以grep结尾的行。\n.    # 匹配一个非换行符的字符 如：'gr.p'匹配gr后接一个任意字符，然后是p。    \n*    # 匹配零个或多个先前字符 如：'*grep'匹配所有一个或多个空格后紧跟grep的行。    \n.*   # 一起用代表任意字符。   \n[]   # 匹配一个指定范围内的字符，如'[Gg]rep'匹配Grep和grep。    \n[^]  # 匹配一个不在指定范围内的字符，如：'[^A-FH-Z]rep'匹配不包含A-R和T-Z的一个字母开头，紧跟rep的行。    \n\\(..\\)  # 标记匹配字符，如'\\(love\\)'，love被标记为1。    \n\\<      # 锚定单词的开始，如:'\\<grep'匹配包含以grep开头的单词的行。    \n\\>      # 锚定单词的结束，如'grep\\>'匹配包含以grep结尾的单词的行。    \nx\\{m\\}  # 重复字符x，m次，如：'0\\{5\\}'匹配包含5个o的行。    \nx\\{m,\\}   # 重复字符x,至少m次，如：'o\\{5,\\}'匹配至少有5个o的行。    \nx\\{m,n\\}  # 重复字符x，至少m次，不多于n次，如：'o\\{5,10\\}'匹配5--10个o的行。   \n\\w    # 匹配文字和数字字符，也就是[A-Za-z0-9]，如：'G\\w*p'匹配以G后跟零个或多个文字或数字字符，然后是p。   \n\\W    # \\w的反置形式，匹配一个或多个非单词字符，如点号句号等。   \n\\b    # 单词锁定符，如: '\\bgrep\\b'只匹配grep。  \n")])])]),s("h2",{attrs:{id:"常见用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见用法"}},[a._v("#")]),a._v(" 常见用法")]),a._v(" "),s("p",[a._v("在文件中搜索一个单词，命令会返回一个包含 “match_pattern” 的文本行：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" match_pattern file_name\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"match_pattern"')]),a._v(" file_name\n")])])]),s("p",[a._v("在多个文件中查找：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"match_pattern"')]),a._v(" file_1 file_2 file_3 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n")])])]),s("p",[a._v("输出除之外的所有行 "),s("code",[a._v("-v")]),a._v(" 选项：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"match_pattern"')]),a._v(" file_name\n")])])]),s("p",[a._v("标记匹配颜色 "),s("code",[a._v("--color=auto")]),a._v(" 选项：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"match_pattern"')]),a._v(" file_name "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--color")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("auto\n")])])]),s("p",[a._v("使用正则表达式 "),s("code",[a._v("-E")]),a._v(" 选项：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-E")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"[1-9]+"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 或")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("egrep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"[1-9]+"')]),a._v("\n")])])]),s("p",[a._v("使用正则表达式 "),s("code",[a._v("-P")]),a._v(" 选项：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-P")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"(\\d{3}\\-){2}\\d{4}"')]),a._v(" file_name\n")])])]),s("p",[a._v("只输出文件中匹配到的部分 "),s("code",[a._v("-o")]),a._v(" 选项：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" this is a "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("test")]),a._v(" line. "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-E")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"[a-z]+\\."')]),a._v("\nline.\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" this is a "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("test")]),a._v(" line. "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("egrep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"[a-z]+\\."')]),a._v("\nline.\n")])])]),s("p",[a._v("统计文件或者文本中包含匹配字符串的行数 "),s("code",[a._v("-c")]),a._v(" 选项：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"text"')]),a._v(" file_name\n")])])]),s("p",[a._v("输出包含匹配字符串的行数 "),s("code",[a._v("-n")]),a._v(" 选项：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"text"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" file_name\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 或")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" file_name "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"text"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v("\n")])])]),s("p",[s("strong",[a._v("多个文件")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"text"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" file_1 file_2\n")])])]),s("p",[a._v("打印样式匹配所位于的字符或字节偏移：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" gun is not unix "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-b")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"not"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("7")]),a._v(":not\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 一行中字符串的字符便宜是从该行的第一个字符开始计算，起始值为0。选项  **-b -o**  一般总是配合使用。")]),a._v("\n")])])]),s("p",[a._v("搜索多个文件并查找匹配文本在哪些文件中：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"text"')]),a._v(" file1 file2 file3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n")])])]),s("p",[a._v("grep递归搜索文件\n在多级目录中对文本进行递归搜索：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"text"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v("\n")])])]),s("blockquote",[s("p",[a._v(".表示当前目录")])]),a._v(" "),s("p",[a._v("忽略匹配样式中的字符大小写：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"hello world"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"HELLO"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# hello")]),a._v("\n")])])]),s("p",[a._v("选项 "),s("code",[a._v("-e")]),a._v(" 制动多个匹配样式：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" this is a text line "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"is"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"line"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v("\nis\nline\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#也可以使用 **-f** 选项来匹配多个样式，在样式文件中逐行写出需要匹配的字符。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" patfile\naaa\nbbb\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" aaa bbb ccc ddd eee "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" patfile "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v("\n")])])]),s("p",[a._v("在grep搜索结果中包括或者排除指定文件：")]),a._v(" "),s("p",[s("strong",[a._v('只在目录中所有的.php和.html文件中递归搜索字符"main()"')])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"main()"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--include")]),a._v(" *."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("php,html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[s("strong",[a._v("在搜索结果中排除所有README文件")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"main()"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--exclude")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"README"')]),a._v("\n")])])]),s("p",[s("strong",[a._v("在搜索结果中排除filelist文件列表里的文件")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"main()"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" --exclude-from filelist\n")])])]),s("p",[a._v("使用0值字节后缀的grep与xargs：")]),a._v(" "),s("p",[s("strong",[a._v("测试文件")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"aaa"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" file1\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"bbb"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" file2\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"aaa"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" file3\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"aaa"')]),a._v(" file* "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-lZ")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("xargs")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-0")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 执行后会删除file1和file3，grep输出用-Z选项来指定以0值字节作为终结符文件名（\\0），xargs -0 读取输入并用0值字节终结符分隔文件名，然后删除匹配文件，-Z通常和-l结合使用。")]),a._v("\n")])])]),s("p",[s("strong",[a._v("grep静默输出")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-q")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"test"')]),a._v(" filename\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 不会输出任何信息，如果命令运行成功返回0，失败则返回非0值。一般用于条件测试。")]),a._v("\n")])])]),s("p",[a._v("打印出匹配文本之前或者之后的行：")]),a._v(" "),s("p",[s("strong",[a._v("显示匹配某个结果之后的3行，使用 "),s("code",[a._v("-A")]),a._v(" 选项")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("seq")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"5"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-A")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("7")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v("\n")])])]),s("p",[s("strong",[a._v("显示匹配某个结果之前的3行，使用 -B 选项")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("seq")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"5"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-B")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v("\n")])])]),s("p",[s("strong",[a._v("显示匹配某个结果的前三行和后三行，使用 -C 选项")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("seq")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"5"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("7")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v("\n")])])]),s("p",[s("strong",[a._v("如果匹配结果有多个，会用“--”作为各匹配结果之间的分隔符")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"a'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[a._v("\\n")]),a._v("b"),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[a._v("\\n")]),a._v("c"),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[a._v("\\n")]),a._v("a"),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[a._v("\\n")]),a._v("b"),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[a._v("\\n")]),a._v('c"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" a "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-A")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n")])])]),s("h2",{attrs:{id:"环境变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#环境变量"}},[a._v("#")]),a._v(" 环境变量")]),a._v(" "),s("p",[a._v("grep的行为受到以下环境变量的影响。")]),a._v(" "),s("p",[a._v("GREP_OPTIONS，此变量指定放置在任何显式选项前面的默认选项。选项规范由空格分隔。反斜杠转义下一个字符，因此它可以指定包含空格或反斜杠的选项。例如，如果GREP_OPTIONS是’--binary-files=without-match --directories=skip’，那么grep执行的时候就假设已经有了这两个选项。")]),a._v(" "),s("p",[a._v("GREP_COLOR，此变量指定用于突出显示匹配(非空)文本的颜色。")]),a._v(" "),s("p",[a._v("GREP_COLORS，指定用于突出显示输出的各个部分的颜色和其他属性。它的值是一个以冒号分隔的功能列表，默认为ms=01；31:mc=01；31:sl=：cx=：fn=35:ln=32:bn=32:se=36，省略了rv和ne布尔功能(即false)。支持的功能如下所示。")]),a._v(" "),s("p",[a._v("sl=，用于整个选定行的SGR子字符串(即-v命令行选项省略时的匹配行，或指定-v时不匹配的行)。但是，如果指定了布尔rv功能和-v命令行选项，则它将应用于上下文匹配行。默认值为空(即终端的默认颜色对)。")]),a._v(" "),s("p",[a._v("cx=，用于整个上下文行的SGR子字符串(即省略-v命令行选项时的非匹配行，或指定-v时的匹配行)。但是，如果指定了布尔RV功能和-v命令行选项，则它将适用于选定的非匹配行。默认值为空(即终端的默认颜色对)。")]),a._v(" "),s("p",[a._v("rv，当指定-v命令行选项时，逆转(掉期)“sl=”和“cx=”功能的布尔值。缺省值为false(即省略了功能)。")]),a._v(" "),s("p",[a._v("mt=01；31，用于匹配任何行中的非空文本的sgr子字符串。(这仅在省略-v命令行选项时使用。)当启动时，sl=(或cx=)能力的效果保持活跃。默认值是当前行背景上的粗体红色文本前景。")]),a._v(" "),s("p",[a._v("ms=01；31，用于匹配选定行中的非空文本的sgr子字符串。(这仅在省略-v命令行选项时使用。)当启动时，sl=(或cx=)能力的效果保持活跃。默认值是当前行背景上的粗体红色文本前景。")]),a._v(" "),s("p",[a._v("mc=01；31，用于匹配上下文行中的非空文本的sgr子字符串。(这仅在省略-v命令行选项时使用。)当启动时，sl=(或cx=)能力的效果保持活跃。默认值是当前行背景上的粗体红色文本前景。")]),a._v(" "),s("p",[a._v("fn=35，用于任何内容行前缀的文件名的SGR子字符串。默认值是终端默认背景上的洋红色文本前景。")]),a._v(" "),s("p",[a._v("ln=32，任何内容行前缀的行号的SGR子字符串。默认值是终端默认背景上的绿色文本前景。")]),a._v(" "),s("p",[a._v("bn=32，用于任何内容行前缀的字节偏移的SGR子字符串。默认值是终端默认背景上的绿色文本前景。")]),a._v(" "),s("p",[a._v("se=36，当指定了非零上下文（--），SGR子字符串用于在选定的行字段(：)、上下文行字段之间(-)和相邻行组之间插入分隔符。默认值是终端默认背景上的青色文本前景。")]),a._v(" "),s("p",[a._v("ne，布尔值，该值防止在每次彩色项结束时使用擦除入行(EL)对右(\\33[K]清除到行尾的值。这是在不支持EL的终端上需要的。对于没有应用Back_COLOR_ERASE(BCE)布尔终止功能的终端、所选择的高亮颜色不影响背景、或者当EL太慢或导致过多闪烁时，它在其他情况下是有用的。默认值为false(即省略功能)")]),a._v(" "),s("p",[a._v("LC_ALL, LC_COLLATE, LANG，这些变量指定LC_COLLATE类别的区域设置，该类别确定用于解释范围表达式(如[a-z])的排序序列。")]),a._v(" "),s("p",[a._v("LC_ALL, LC_CTYPE, LANG，这些变量指定LC_CTYPE类别的区域设置，它决定字符的类型，例如，哪些字符是空格。")]),a._v(" "),s("p",[a._v("LC_ALL, LC_MESSAGES, LANG，这些变量指定LC_MESSAGES类别的区域设置，它确定grep用于消息的语言。默认的C语言环境使用美式英语消息。")]),a._v(" "),s("p",[a._v("POSIXLY_CORRECT，如果设置，grep的行为与POSIX.2所要求的一样；否则，grep的行为更像其他GNU程序。POSIX.2要求必须将文件名后面的选项视为文件名；默认情况下，这些选项被排到操作数列表的前面，并被视为选项。此外，POSIX.2还要求将未被承认的选项诊断为“非法”，但由于它们并不真正违反法律，默认情况是将它们诊断为“无效”。POSIXLY_RIDER还禁用_N_GNU_NOOPTION_ARGV_LANGS_，如下所述。")]),a._v(" "),s("p",[s("em",[a._v("N_GNU_nonoption_argv_flags")]),a._v("，(这里N是grep的数字进程ID。)如果此环境变量值的ith字符为1，则不要将grep的ith操作数视为选项，即使它似乎是选项之一。shell可以为其运行的每个命令在环境中放置此变量，指定哪些操作数是文件名通配符展开的结果，因此不应被视为选项。此行为仅在GNU C库中可用，且仅在未设置POSIXLY_RIDER时才可用。")]),a._v(" "),s("h2",{attrs:{id:"退出码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#退出码"}},[a._v("#")]),a._v(" 退出码")]),a._v(" "),s("p",[a._v("通常，如果找到选定的行，则退出状态为0，否则为1。但是，如果发生错误，退出状态为2，除非使用-q、--quite、--slient选项，并找到选定的行。但是，请注意，对于grep、CMP和diff等程序，POSIX只要求在出现错误时的退出状态大于1；因此，出于可移植性的考虑，建议使用对此一般条件进行测试的逻辑，而不是与2严格相等的逻辑。")]),a._v(" "),s("h2",{attrs:{id:"举例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#举例"}},[a._v("#")]),a._v(" 举例")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("sogrey@bogon newDir3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" test2.txt\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("123")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("23")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("212")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("sogrey@bogon newDir3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" ^2 test2.txt "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示以2开头的行")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("23")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("212")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("sogrey@bogon newDir3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("23")]),a._v(" test2.txt "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示不包含23的行")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("212")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("sogrey@bogon newDir3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-w")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("23")]),a._v(" test2.txt "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示整个字都匹配的行")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("23")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("sogrey@bogon newDir3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("$ \n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);