(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{382:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"col-过滤控制字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#col-过滤控制字符"}},[t._v("#")]),t._v(" col - 过滤控制字符")]),t._v(" "),s("p",[t._v("col命令 是一个标准输入文本过滤器，它从标注输入设备读取文本内容，并把内容显示到标注输出设备。在许多UNIX说明文件里，都有RLF控制字符。当我们运用shell特殊字符>和>>，把说明文件的内容输出成纯文本文件时，控制字符会变成乱码，col命令则能有效滤除这些控制字符。")]),t._v(" "),s("p",[t._v("过滤掉影响阅读的控制字符，使用重定向符把说明手册的内容输出到文本文件时，控制字符就成乱码。col指令可以过滤掉控制字符，使文本可读。col从标砖输入读取内容，输出到标准输出。col在读取字符时跟踪字符集，并确保字符集在输出时是正确的。如果输入试图备份到最后一条刷新行，col将显示一条警告消息。")]),t._v(" "),s("h2",{attrs:{id:"适用范围"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#适用范围"}},[t._v("#")]),t._v(" 适用范围")]),t._v(" "),s("div",{staticClass:"svg redhat"},[t._v("RedHat")]),t._v(" "),s("div",{staticClass:"svg rhel"},[t._v("RHEL")]),t._v(" "),s("div",{staticClass:"svg ubuntu"},[t._v("Ubuntu")]),t._v(" "),s("div",{staticClass:"svg centos"},[t._v("CentOS")]),t._v(" "),s("div",{staticClass:"svg debian"},[t._v("Debian")]),t._v(" "),s("div",{staticClass:"svg deepin"},[t._v("Deepin")]),t._v(" "),s("div",{staticClass:"svg suse"},[t._v("SUSE")]),t._v(" "),s("div",{staticClass:"svg opensuse"},[t._v("openSUSE")]),t._v(" "),s("div",{staticClass:"svg fedora"},[t._v("Fedora")]),t._v(" "),s("div",{staticClass:"svg linuxmint"},[t._v("Linux Mint")]),t._v(" "),s("div",{staticClass:"svg alpinelinux"},[t._v("Alpine Linux")]),t._v(" "),s("div",{staticClass:"svg archlinux"},[t._v("Arch Linux")]),t._v(" "),s("h2",{attrs:{id:"语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("col  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-bfpx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-lnum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n")])])]),s("h2",{attrs:{id:"选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[t._v("#")]),t._v(" 选项")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v("              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 过滤所有的控制字符")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v("              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 过滤掉RLF字符，忽略HRLF字符")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v("              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 忽略未知的控制字符")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-x")]),t._v("              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将多个空格用tab代替")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-lnum")]),t._v("           "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置缓冲区大小，默认128行")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--help")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示帮助文档")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--version")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示命令版本信息")]),t._v("\n")])])]),s("h2",{attrs:{id:"举例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#举例"}},[t._v("#")]),t._v(" 举例")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("sogrey@bogon demo4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("man")]),t._v(" \n您需要什么手册页？\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("sogrey@bogon demo4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("man")]),t._v(" col\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("sogrey@bogon demo4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("man")]),t._v(" col "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" col.txt "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将手册从定向到文件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("standard input"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":58: warning "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(".0i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": cannot adjust line\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("standard input"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":74: warning "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(".5i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": cannot adjust line\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("sogrey@bogon demo4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("\ncol.txt  hello.txt  test2.txt\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("sogrey@bogon demo4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" col.txt\ncol"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                         General Commands Manual                        col"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n\nNAME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("名\n       col - 过滤掉输入中的反向换行符\n\nSYNOPSIS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("总\n       col "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-bfx")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-l")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nDESCRIPTION"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("描\n       col   过滤掉反向"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("以及半反向"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("换行符"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LF:   line   feed   or   NL:   new  line"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(",\n       这样输出按正常顺序，即只包括正向和半正向换行符,\n       而且在可能的地方使用tab替换白空格.这对 nroff"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 和 tbl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 的输出处理很有用处.\n\n       col 从标准输出读入,并写出到标准输出上.\n\n       选项如下:\n\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v("     不输出任何退格符,在每列的位置上只打印最后写的那个字符.\n\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v("     允许正向半换行符"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("``fine"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("模式"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".\n              通常,处于半行分界线上的字符打印在下一行.\n\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-x")]),t._v("     输出多个空格以替换tab.\n\n       "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-l")]),t._v(" num 在内存中至少缓冲 num 行.  默认情况下,缓冲128行.\n\n       col 所能理解的用于回车操作的控制序列以及它们的十进制值都列在下面的表中:\n\n       ESC-7  反向换行符"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("escape后接7"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n       ESC-8  反向半换行符"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("escape后接8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n       ESC-9  正向半换行符"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("escape后接9"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n       backspace\n              反向移动一列"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("在第一列则忽略.\n\n       carriage "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n       newline\n              正向换行符"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("同时执行回车"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("carriage "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("操作\n\n       "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("shift")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n              转到正常字符集"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n       "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("shift")]),t._v(" out\n              转到备选的字符集"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n       space  正向移动一列"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n       tab    正向移动到下一个tab"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n       vertical tab\n              反向换行符"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n       丢弃所有不被承认的控制字符和escape序列.\n\n       当读取字符时, col 保持着与字符集的联系,而且在输出时确保字符集是正确的.\n\n       如果输入设备试图回复到最近被刷新的行, col 会显示一条警告消息.\n\nSEE ALSO"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("另\n       expand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" nroff"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" tbl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nHISTORY"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("历\n       col 命令出现于AT"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("T UNIX版本6.\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("中\n       riser "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("boomer@ccidnet.com"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("中\n       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),t._v("/12/6\n\n《\n       http://cmpp.linuxforum.net\n\n\n\nCOL "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("                               "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1991")]),t._v("年6月17日                             col"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("sogrey@bogon demo4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ \n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);