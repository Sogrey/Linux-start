(window.webpackJsonp=window.webpackJsonp||[]).push([[273],{593:function(a,t,s){"use strict";s.r(t);var e=s(14),r=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"tar-将许多文件一起保存至一个单独的磁带或磁盘归档-并能从归档中单独还原所需文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tar-将许多文件一起保存至一个单独的磁带或磁盘归档-并能从归档中单独还原所需文件"}},[a._v("#")]),a._v(" tar - 将许多文件一起保存至一个单独的磁带或磁盘归档，并能从归档中单独还原所需文件")]),a._v(" "),t("p",[a._v("创建归档、解压或者压缩文件。")]),a._v(" "),t("p",[a._v("tar命令 可以为linux的文件和目录创建档案。利用tar，可以为某一特定文件创建档案（备份文件），也可以在档案中改变文件，或者向档案中加入新的文件。tar最初被用来在磁带上创建档案，现在，用户可以在任何设备上创建档案。利用tar命令，可以把一大堆的文件和目录全部打包成一个文件，这对于备份文件或将几个文件组合成为一个文件以便于网络传输是非常有用的。")]),a._v(" "),t("p",[a._v("首先要弄清两个概念：打包和压缩。打包是指将一大堆文件或目录变成一个总的文件；压缩则是将一个大的文件通过一些压缩算法变成一个小文件。")]),a._v(" "),t("p",[a._v("为什么要区分这两个概念呢？这源于Linux中很多压缩程序只能针对一个文件进行压缩，这样当你想要压缩一大堆文件时，你得先将这一大堆文件先打成一个包（tar命令），然后再用压缩程序进行压缩（gzip bzip2命令）。")]),a._v(" "),t("h2",{attrs:{id:"适用范围"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#适用范围"}},[a._v("#")]),a._v(" 适用范围")]),a._v(" "),t("div",{staticClass:"svg redhat"},[a._v("RedHat")]),a._v(" "),t("div",{staticClass:"svg rhel"},[a._v("RHEL")]),a._v(" "),t("div",{staticClass:"svg ubuntu"},[a._v("Ubuntu")]),a._v(" "),t("div",{staticClass:"svg centos"},[a._v("CentOS")]),a._v(" "),t("div",{staticClass:"svg debian"},[a._v("Debian")]),a._v(" "),t("div",{staticClass:"svg deepin"},[a._v("Deepin")]),a._v(" "),t("div",{staticClass:"svg suse"},[a._v("SUSE")]),a._v(" "),t("div",{staticClass:"svg opensuse"},[a._v("openSUSE")]),a._v(" "),t("div",{staticClass:"svg fedora"},[a._v("Fedora")]),a._v(" "),t("div",{staticClass:"svg linuxmint"},[a._v("Linux Mint")]),a._v(" "),t("div",{staticClass:"svg alpinelinux"},[a._v("Alpine Linux")]),a._v(" "),t("div",{staticClass:"svg archlinux"},[a._v("Arch Linux")]),a._v(" "),t("h2",{attrs:{id:"语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[a._v("#")]),a._v(" 语法")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("选项"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("  文件\n")])])]),t("h2",{attrs:{id:"选项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[a._v("#")]),a._v(" 选项")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("-A, --catenate, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--concatenate")]),a._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在归档最后追加tar文件")]),a._v("\n-c, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--create")]),a._v("                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建归档")]),a._v("\n-d, --diff, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--compare")]),a._v("           "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查找归档和文件系统之间的差异")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--delete")]),a._v("                        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 从档案中删除(不是在磁带上！)")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("file")]),a._v("                         "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 指定归档名字")]),a._v("\n-r, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--append")]),a._v("                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在归档的最后追加文件")]),a._v("\n-t, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--list")]),a._v("                      "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 列出归档的文件列表")]),a._v("\n--telst-label                   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 测试存档卷标签并退出")]),a._v("\n-u, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--update")]),a._v("                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 只有文件比归档中的内容新的时候，才会追加")]),a._v("\n-x, --extract, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--get")]),a._v("            "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 从归档中释放文件")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("dir")]),a._v(" ,  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--directory")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("DIR       "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 更改工作目录")]),a._v("\n-j, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--bzip2")]),a._v("                     "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 从bzip2中解压或者压缩")]),a._v("\n-J, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-xz")]),a._v("                         "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 通过xz过滤存档")]),a._v("\n-p, --preserve-permissions      "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 提取有关文件权限的信息(超级用户默认)")]),a._v("\n-z, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--gzip")]),a._v("                      "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 从gzip中解压或者压缩")]),a._v("\n-v, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--verbose")]),a._v("                   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示详细信息")]),a._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--help")]),a._v("                           "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示帮助文档")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v("                        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示命令版本信息")]),a._v("\n")])])]),t("p",[a._v("操作修饰符")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("--check-device                "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建增量档案时检查设备编号(默认)")]),a._v("\n-g, --listed-incremental"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("FILE "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 处理新的GNU格式增量备份")]),a._v("\n-G, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--incremental")]),a._v("             "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 处理旧的GNU格式增量备份")]),a._v("\n--ignore-failed-read          "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 不要在不可读文件上使用非零退出")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--level")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("NUMBER                "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建列表的转储级别-增量存档")]),a._v("\n-n, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--seek")]),a._v("                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 档案是可查找的")]),a._v("\n--no-check-device             "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建增量档案时不检查设备编号")]),a._v("\n--no-seek                     "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 档案是不可寻的")]),a._v("\n--occurrence"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("NUMBER"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("         "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 只处理存档中每个文件的第NUMBER次出现的文件；此选项仅与--delete、--diff、--extract、--list一起使用时有效，以及在命令行上或通过-T选项给出的文件列表有效；数字默认值为1。")]),a._v("\n--sparse-version"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("MAJOR"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(".MINOR"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将稀疏格式的版本")]),a._v("\n-S, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--sparse")]),a._v("                  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 有效处理稀疏文件")]),a._v("\n")])])]),t("p",[a._v("覆盖控制")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("-k, --keep-old-files         "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 解压缩时不要替换现有文件，将它们视为错误")]),a._v("\n--skip-old-files             "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 解压缩时不要替换现有文件，请悄悄跳过它们")]),a._v("\n--keep-newer-files           "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 不要替换比其存档副本更新的现有文件")]),a._v("\n--no-overwrite-dir           "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 保存现有目录的元数据")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--overwrite")]),a._v("                  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 解压时替换现有的文件")]),a._v("\n--overwrite-dir              "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 提取时覆盖现有目录的元数据(默认)")]),a._v("\n--recursive-unlink           "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 提取目录之前的空层次结构")]),a._v("\n--remove-files               "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将文件添加到存档后删除它们")]),a._v("\n-U, --unlink-first           "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在提取每个文件之前删除它。")]),a._v("\n-W, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--verify")]),a._v("                 "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在编写存档后尝试验证它")]),a._v("\n")])])]),t("p",[a._v("选择输出流")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("--ignore-command-error       "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 忽略子级退出代码")]),a._v("\n--no-ignore-command-error    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将子级的非零退出码视为错误")]),a._v("\n-O, --to-stdout              "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将文件解压缩到标准输出")]),a._v("\n--to-command"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("COMMAND         "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将文件解压缩到另一个处理文件属性的程序。")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--acls")]),a._v("                       "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将ACLs保存到存档中")]),a._v("\n--atime-preserve"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("METHOD"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 保留转储文件的访问时间，方法是在读取后恢复时间(METHOD=’replace’；默认值)，或者不首先设置时间(METHOD=’system’)")]),a._v("\n--delay-directory-restore    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将已提取目录的设置修改时间和权限延迟到提取结束")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--group")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("NAME                 "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 强制NAME作为添加文件的组")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--mode")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("CHANGES               "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 强制(符号) 添加的文件的模式为CHANGES")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--mtime")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("DATE-OR-FILE         "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 设置文件的mtime")]),a._v("\n-m, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--touch")]),a._v("                  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 不要提取文件修改时间")]),a._v("\n--no-acls                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 不要从存档中提取ACLs")]),a._v("\n--no-delay-directory-restore "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 取消选项“--delay-directory-restore”")]),a._v("\n--no-same-owner              "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 自解压缩文件(普通用户默认)")]),a._v("\n--no-same-permissions        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 从存档提取权限时应用用户的umask(普通用户默认)")]),a._v("\n--no-selinux                 "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 不要提取SELinux上下文")]),a._v("\n--no-xattrs                  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 不要从归档文件中提取用户/root的xatts")]),a._v("\n--numeric-owner              "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 始终使用数字作为用户名/组名。")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--owner")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("NAME                 "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 强制NAME作为添加文件的所有者")]),a._v("\n-p, --preserve-permissions, --same-permissions "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 提取有关文件权限的信息(超级用户默认)")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--preserve")]),a._v("                   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 同时具备“-p”和“-s”选项")]),a._v("\n--same-owner                 "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 尝试提取与存档中存在的所有权相同的文件(默认为超级用户)。")]),a._v("\n-s, --preserve-order, --same-order "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 排序要提取的名称以匹配存档")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--selinux")]),a._v("                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 保存SELinux上下文到存档")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-xattrs")]),a._v("                      "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 保存用户/rootd xattrs到存档")]),a._v("\n")])])]),t("p",[a._v("设备选择和切换")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("-f, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--file")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("ARCHIVE           "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用存档文件或设备ARCHIVE")]),a._v("\n--force-local                "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 存档文件是本地的，即使它有冒号。")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-F")]),a._v("\n--info-script"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("NAME\n--new-volume-script"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("NAME     "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在每个磁带的末尾运行脚本")]),a._v("\nL, --tape-length"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("NUMBER      "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在写入NUMBERx1024字节后更改磁带")]),a._v("\n-M, --multi-volume           "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建/列表/提取多卷存档")]),a._v("\n--rmt-command"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("COMMAND        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用给定的rmt命令代替rmt")]),a._v("\n--rsh-command"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("COMMAND        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用给定的远程命令代替rsh")]),a._v("\n--volno-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("FILE            "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用/更新文件中的卷号")]),a._v("\n")])])]),t("p",[a._v("设备块")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("-b, --blocking-factor"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("BLOCKS  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 每个记录BLOCKSx512个字节")]),a._v("\n-B, --read-full-records       "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 重新定义block大小")]),a._v("\n-i, --ignore-zeros            "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 忽略归档中的零块(意为EOF)")]),a._v("\n--record-size"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("NUMBER          "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 每个记录NUMBER字节，倍数为512")]),a._v("\n")])])]),t("p",[a._v("归档格式选择")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("-H, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--format")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("FORMAT           "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用给定的格式创建归档，格式可以是：")]),a._v("\n                              "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# gnu，GNU tar 1.13.x格式    ")]),a._v("\n                              "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# oldgnu，按tar<=1.12表示的GNU格式")]),a._v("\n                              "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# pax，POSIX 1003.1-2001 (pax)格式")]),a._v("\n                              "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# posix，和pax一样")]),a._v("\n                              "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ustar，POSIX 1003.1-1988 (ustar)格式")]),a._v("\n                              "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# v7，旧的v7 tar格式")]),a._v("\n--old-archive, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--portability")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 等价于“--format=v7”")]),a._v("\n--pax-option"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("\nkeyword"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(":"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(",keyword"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(":"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n                              "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 控制pax关键字")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--posix")]),a._v("                       "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 等价于“--format=posix”")]),a._v("\nV, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--label")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("TEXT               "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用卷名TEXT创建存档；在列表/解压缩时，使用TEXT作为卷名的全局模式")]),a._v("\n")])])]),t("p",[a._v("压缩选项")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("-a, --auto-compress           "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用归档后缀确定压缩程序")]),a._v("\n-I, --use-compress-program"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("PROG "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 通过PROG过滤(必须接受-d)")]),a._v("\n-j, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--bzip2")]),a._v("                   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 通过bzip2过滤存档")]),a._v("\n-J, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--xz")]),a._v("                      "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 通过xz过滤存档")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--lzip")]),a._v("                        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 通过lzip过滤存档")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--lzma")]),a._v("                        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 通过lzma过滤存档")]),a._v("\n--lzop, --no-auto-compress    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 不要使用归档后缀来确定压缩程序。")]),a._v("\n-z, --gzip, --gunzip, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--ungzip")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 通过gzip过滤存档")]),a._v("\n-Z, --compress, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--uncompress")]),a._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 通过compress过滤存档")]),a._v("\n")])])]),t("p",[a._v("本地文件选择")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("--add-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("FILE               "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将给定的文件添加到归档文件中(如果其名称以‘-’开头，则有用)")]),a._v("\n--backup"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("CONTROL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("            "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除前的备份，选择版本控制")]),a._v("\n-C, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--directory")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("DIR           "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 切换到目录dir")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--exclude")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("PATTERN             "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 排除指定文件")]),a._v("\n--exclude-backups             "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 排除备份和锁定的文件")]),a._v("\n--exclude-caches              "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 排除包含CACHEDIR.TAG的目录的内容，标记文件本身除外")]),a._v("\n--exclude-caches-all          "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# CACHEDIR.TAG的目录")]),a._v("\n--exclude-caches-under        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 排除包含CACHEDIR.TAG目录下的所有内容")]),a._v("\n--exclude-tag"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("FILE            "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 排除包含FILE的目录的内容，但文件本身除外")]),a._v("\n--exclude-tag-all"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("FILE        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 排除包含FILE的目录")]),a._v("\n--exclude-tag-under"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("FILE      "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 排除包含FILE的目录下的所有内容")]),a._v("\n--exclude-vcs                 "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 排除版本控制的系统目录")]),a._v("\n-h, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--dereference")]),a._v("             "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 遵循符号链接；归档和转储它们指向的文件")]),a._v("\n--hard-dereference            "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 遵循硬链接；归档和转储它们指向的文件")]),a._v("\n-K, --starting-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("MEMBER-NAME "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 从存档中的成员MEMBER-NAME开始")]),a._v("\n--newer-mtime"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("DATE            "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 比较仅更改数据的日期和时间")]),a._v("\n--no-null                     "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 关闭“--null”选项")]),a._v("\n--no-recursion                "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 避免在目录中自动递归")]),a._v("\n--no-unquote                  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 不要取消引用-T读取的文件名")]),a._v("\n--null, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-T")]),a._v("                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 读取以空结尾的名称，禁用-C")]),a._v("\n-N, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--newer")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("DATE-OR-FILE\n--after-date"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("DATE-OR-FILE     "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 只保存比DATE-OR-FILE新的文件")]),a._v("\n--one-file-system             "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建存档时保持本地文件系统")]),a._v("\n-P, --absolute-names          "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 不要从文件名中去掉前导‘/’")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--recursion")]),a._v("                   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 递归操作，默认的")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--suffix")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("STRING               "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除之前备份，重写通常的后缀(‘~’除非被环境变量SIMPLE_BACKUP_SUFFIX覆盖)")]),a._v("\n-T, --files-from"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("FILE         "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 获取要从FILE中提取或创建的名称")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--unquote")]),a._v("                     "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 取消引用-T读取的文件名(默认)")]),a._v("\n-X, --exclude-from"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("FILE       "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 排除FILE中列出的模式")]),a._v("\n")])])]),t("p",[a._v("文件名字转换")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("--strip-components"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("NUMBER     "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 提取文件名中的带NUM前导组件")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--transform")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("EXPRESSION,\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--xform")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("EXPRESSION            "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用sed替换EXPRESSION转换文件名")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--anchored")]),a._v("                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 模式匹配文件名开始")]),a._v("\n--ignore-case                 "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 忽略大小写")]),a._v("\n--no-anchored                 "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 任何“/”之后的模式匹配(exclude的默认)")]),a._v("\n--no-ignore-case              "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 大小写敏感，默认。")]),a._v("\n--no-wildcards                "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 逐字字符串匹配")]),a._v("\n--no-wildcards-match-slash    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 通配符不匹配“/”")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--wildcards")]),a._v("                   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用通配符(默认)")]),a._v("\n--wildcards-match-slash       "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 通配符匹配“/”，默认")]),a._v("\n")])])]),t("p",[a._v("多信息输出")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("--checkpoint"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("NUMBER"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("         "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 每NUMBERth个记录显示一次进度")]),a._v("\n--checkpoint-action"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("ACTION    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 对每个检查点执行操作ACTION")]),a._v("\n--index-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("FILE             "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将详细信息输出到FILE")]),a._v("\n-l, --check-links             "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 如果不是所有链接都已转储，则打印一条消息")]),a._v("\n--no-quote-chars"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("STRING       "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 禁止引用STRING中的字符")]),a._v("\n--quote-chars"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("STRING          "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 引用STRING中的字符")]),a._v("\n--quoting-style"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("STYLE         "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 设置名称引用样式")]),a._v("\n-R, --block-number            "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在存档中显示每条消息的块号")]),a._v("\n--show-defaults               "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示tar默认值")]),a._v("\n--show-omitted-dirs           "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 列出或提取时，列出不匹配搜索条件的每个目录")]),a._v("\n--show-transformed-names      \n--show-stored-names           "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 转换后显示文件名或存档名称")]),a._v("\n--totals"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("SIGNAL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("             "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在处理归档文件后使用参数“-”打印总字节；在发送此信号时使用参数打印总字节；允许的信号是：SIGHUP、SIGQUIT、SIGINT、SIGUSR1和SIGUSR2；没有SIG前缀的名称也被接受。")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--utc")]),a._v("                         "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用UTC格式打印文件修改日期")]),a._v("\n-v, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--verbose")]),a._v("                 "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 详细列出已处理的文件")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--warning")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("KEYWORD             "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 警告控制")]),a._v("\n-w, --interactive, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--confirmation")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 要求确认每一项行动")]),a._v("\n")])])]),t("p",[a._v("备份后缀为‘~’，除非设置为“--suffix”或“SIMPLE_BACKUP_SUFFIX”。版本控制可以用“--backup”或“VERSION_CONTROL”设置，值为：")]),a._v(" "),t("ul",[t("li",[a._v("1）none，off，从不备份。")]),a._v(" "),t("li",[a._v("2）t，numbered，数字备份。")]),a._v(" "),t("li",[a._v("3）nil，existing，如果存在数字备份，那么使用数字备份；否则，使用普通备份。")]),a._v(" "),t("li",[a._v("4）never，simple，简单备份。")])]),a._v(" "),t("h2",{attrs:{id:"举例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#举例"}},[a._v("#")]),a._v(" 举例")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("- z：有gzip属性的\n- j：有bz2属性的\n- Z：有compress属性的\n- v：显示所有过程\n- O：将文件解开到标准输出\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-cf")]),a._v(" archive.tar foo bar  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 从文件 foo 和 bar 创建归档文件 archive.tar。")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-tvf")]),a._v(" archive.tar         "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 详细列举归档文件 archive.tar 中的所有文件。")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-xf")]),a._v(" archive.tar          "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 展开归档文件 archive.tar 中的所有文件。")]),a._v("\n")])])]),t("p",[a._v("下面的参数-f是必须的")]),a._v(" "),t("ul",[t("li",[a._v("-f: 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名。")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-cf")]),a._v(" all.tar *.jpg\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 这条命令是将所有.jpg的文件打成一个名为all.tar的包。-c是表示产生新的包，-f指定包的文件名。")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-rf")]),a._v(" all.tar *.gif\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 这条命令是将所有.gif的文件增加到all.tar的包里面去。-r是表示增加文件的意思。")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-uf")]),a._v(" all.tar logo.gif\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 这条命令是更新原来tar包all.tar中logo.gif文件，-u是表示更新文件的意思。")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-tf")]),a._v(" all.tar\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 这条命令是列出all.tar包中所有文件，-t是列出文件的意思")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-cfv")]),a._v(" archive.tar foo bar  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 从文件foo和bar创建archive.tar。")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-tvf")]),a._v(" archive.tar         "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 详细列出archive.tar中的所有文件。")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-xf")]),a._v(" archive.tar          "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 从archive.tar提取所有文件。")]),a._v("\n")])])]),t("h3",{attrs:{id:"zip格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zip格式"}},[a._v("#")]),a._v(" zip格式")]),a._v(" "),t("ul",[t("li",[a._v("压缩： zip -r [目标文件名].zip [原文件/目录名]")]),a._v(" "),t("li",[a._v("解压： unzip [原文件名].zip")])]),a._v(" "),t("blockquote",[t("p",[a._v("注：-r参数代表递归")])]),a._v(" "),t("h3",{attrs:{id:"tar格式-该格式仅仅打包-不压缩"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tar格式-该格式仅仅打包-不压缩"}},[a._v("#")]),a._v(" tar格式（该格式仅仅打包，不压缩）")]),a._v(" "),t("ul",[t("li",[a._v("打包：tar -cvf [目标文件名].tar [原文件名/目录名]")]),a._v(" "),t("li",[a._v("解包：tar -xvf [原文件名].tar")])]),a._v(" "),t("blockquote",[t("p",[a._v("注：c参数代表create（创建），x参数代表extract（解包），v参数代表verbose（详细信息），f参数代表filename（文件名），所以f后必须接文件名。")])]),a._v(" "),t("h3",{attrs:{id:"tar-gz格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tar-gz格式"}},[a._v("#")]),a._v(" tar.gz格式")]),a._v(" "),t("ul",[t("li",[a._v("方式一：利用前面已经打包好的tar文件，直接用压缩命令。\n"),t("ul",[t("li",[a._v("压缩：gzip [原文件名].tar")]),a._v(" "),t("li",[a._v("解压：gunzip [原文件名].tar.gz")])])]),a._v(" "),t("li",[a._v("方式二：一次性打包并压缩、解压并解包\n"),t("ul",[t("li",[a._v("打包并压缩： tar -zcvf [目标文件名].tar.gz [原文件名/目录名]")]),a._v(" "),t("li",[a._v("解压并解包： tar -zxvf [原文件名].tar.gz")])])])]),a._v(" "),t("blockquote",[t("p",[a._v("注：z代表用gzip算法来压缩/解压。")])]),a._v(" "),t("h3",{attrs:{id:"tar-bz2格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tar-bz2格式"}},[a._v("#")]),a._v(" tar.bz2格式")]),a._v(" "),t("ul",[t("li",[a._v("方式一：利用已经打包好的tar文件，直接执行压缩命令：\n"),t("ul",[t("li",[a._v("压缩：bzip2 [原文件名].tar")]),a._v(" "),t("li",[a._v("解压：bunzip2 [原文件名].tar.bz2")])])]),a._v(" "),t("li",[a._v("方式二：一次性打包并压缩、解压并解包\n"),t("ul",[t("li",[a._v("打包并压缩： tar -jcvf [目标文件名].tar.bz2 [原文件名/目录名]")]),a._v(" "),t("li",[a._v("解压并解包： tar -jxvf [原文件名].tar.bz2")])])])]),a._v(" "),t("blockquote",[t("p",[a._v("注：小写j代表用bzip2算法来压缩/解压。")])]),a._v(" "),t("h3",{attrs:{id:"tar-xz格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tar-xz格式"}},[a._v("#")]),a._v(" tar.xz格式")]),a._v(" "),t("ul",[t("li",[a._v("方式一：利用已经打包好的tar文件，直接用压缩命令：\n"),t("ul",[t("li",[a._v("压缩：xz [原文件名].tar")]),a._v(" "),t("li",[a._v("解压：unxz [原文件名].tar.xz")])])]),a._v(" "),t("li",[a._v("方式二：一次性打包并压缩、解压并解包\n"),t("ul",[t("li",[a._v("打包并压缩： tar -Jcvf [目标文件名].tar.xz [原文件名/目录名]")]),a._v(" "),t("li",[a._v("解压并解包： tar -Jxvf [原文件名].tar.xz")])])])]),a._v(" "),t("blockquote",[t("p",[a._v("注：大写J代表用xz算法来压缩/解压。")])]),a._v(" "),t("h3",{attrs:{id:"tar-z格式-已过时"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tar-z格式-已过时"}},[a._v("#")]),a._v(" tar.Z格式（已过时）")]),a._v(" "),t("ul",[t("li",[a._v("方式一：利用已经打包好的tar文件，直接用压缩命令：\n"),t("ul",[t("li",[a._v("压缩：compress [原文件名].tar")]),a._v(" "),t("li",[a._v("解压：uncompress [原文件名].tar.Z")])])]),a._v(" "),t("li",[a._v("方式二：一次性打包并压缩、解压并解包\n"),t("ul",[t("li",[a._v("打包并压缩： tar -Zcvf [目标文件名].tar.Z [原文件名/目录名]")]),a._v(" "),t("li",[a._v("解压并解包： tar -Zxvf [原文件名].tar.Z")])])])]),a._v(" "),t("blockquote",[t("p",[a._v("注：大写Z代表用ncompress算法来压缩/解压。另，ncompress是早期Unix系统的压缩格式，但由于ncompress的压缩率太低，现已过时。")])]),a._v(" "),t("h2",{attrs:{id:"jar格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jar格式"}},[a._v("#")]),a._v(" jar格式")]),a._v(" "),t("ul",[t("li",[a._v("压缩：jar -cvf [目标文件名].jar [原文件名/目录名]")]),a._v(" "),t("li",[a._v("解压：jar -xvf [原文件名].jar")])]),a._v(" "),t("blockquote",[t("p",[a._v("注：如果是打包的是Java类库，并且该类库中存在主类，那么需要写一个META-INF/MANIFEST.MF配置文件，内容如下：")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("Manifest-Version: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.0")]),a._v("\nCreated-By: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.6")]),a._v(".0_27 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("Sun Microsystems Inc."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nMain-class: the_name_of_the_main_class_should_be_put_here\n")])])]),t("p",[a._v("然后用如下命令打包：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("jar "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-cvfm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("目标文件名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(".jar META-INF/MANIFEST.MF "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("原文件名/目录名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),t("p",[a._v("这样以后就能用“java -jar [文件名].jar”命令直接运行主类中的public static void main方法了。")]),a._v(" "),t("h3",{attrs:{id:"_7z格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7z格式"}},[a._v("#")]),a._v(" 7z格式")]),a._v(" "),t("ul",[t("li",[a._v("压缩：7z a [目标文件名].7z [原文件名/目录名]")]),a._v(" "),t("li",[a._v("解压：7z x [原文件名].7z")])]),a._v(" "),t("blockquote",[t("p",[a._v("注：这个7z解压命令支持rar格式，即：")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("7z x "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("原文件名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(".rar\n")])])]),t("h3",{attrs:{id:"其它例子"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其它例子"}},[a._v("#")]),a._v(" 其它例子")]),a._v(" "),t("p",[a._v("将文件全部打包成tar包 ：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-cvf")]),a._v(" log.tar log2012.log    仅打包，不压缩！\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-zcvf")]),a._v(" log.tar.gz log2012.log   打包后，以 "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("gzip")]),a._v(" 压缩\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-jcvf")]),a._v(" log.tar.bz2 log2012.log  打包后，以 "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("bzip2")]),a._v(" 压缩\n")])])]),t("p",[a._v("在选项f之后的文件档名是自己取的，我们习惯上都用 .tar 来作为辨识。 如果加z选项，则以.tar.gz或.tgz来代表gzip压缩过的tar包；如果加j选项，则以.tar.bz2来作为tar包名。")]),a._v(" "),t("p",[a._v("解压目录")]),a._v(" "),t("p",[a._v("去掉第一层目录结构，要出除第二层，--strip-components 2")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-xvf")]),a._v(" portal-web-v2.0.0.tar --strip-components "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" 指定目录\n")])])]),t("p",[a._v("查阅上述tar包内有哪些文件 ：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ztvf")]),a._v(" log.tar.gz\n")])])]),t("p",[a._v("由于我们使用 gzip 压缩的log.tar.gz，所以要查阅log.tar.gz包内的文件时，就得要加上z这个选项了。")]),a._v(" "),t("p",[a._v("将tar包解压缩 ：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-zxvf")]),a._v(" /opt/soft/test/log.tar.gz\n")])])]),t("p",[a._v("在预设的情况下，我们可以将压缩档在任何地方解开的")]),a._v(" "),t("p",[a._v("只将tar内的部分文件解压出来 ：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-zxvf")]),a._v(" /opt/soft/test/log30.tar.gz log2013.log\n")])])]),t("p",[a._v("我可以透过tar -ztvf来查阅 tar 包内的文件名称，如果单只要一个文件，就可以透过这个方式来解压部分文件！")]),a._v(" "),t("p",[a._v("文件备份下来，并且保存其权限 ：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-zcvpf")]),a._v(" log31.tar.gz log2014.log log2015.log log2016.log\n")])])]),t("p",[a._v("这个-p的属性是很重要的，尤其是当您要保留原本文件的属性时。")]),a._v(" "),t("p",[a._v("在文件夹当中，比某个日期新的文件才备份 ：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-N")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"2012/11/13"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-zcvf")]),a._v(" log17.tar.gz "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("test")]),a._v("\n")])])]),t("p",[a._v("备份文件夹内容是排除部分文件：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--exclude")]),a._v(" scf/service "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-zcvf")]),a._v(" scf.tar.gz scf/*\n")])])]),t("p",[a._v("打包文件之后删除源文件：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-cvf")]),a._v(" test.tar "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("test")]),a._v(" --remove-files\n")])])]),t("p",[a._v("其实最简单的使用 tar 就只要记忆底下的方式即可：")]),a._v(" "),t("ul",[t("li",[a._v("压　缩：tar -jcv -f filename.tar.bz2 要被压缩的文件或目录名称")]),a._v(" "),t("li",[a._v("查　询：tar -jtv -f filename.tar.bz2")]),a._v(" "),t("li",[a._v("解压缩：tar -jxv -f filename.tar.bz2 -C 欲解压缩的目录")])])])}),[],!1,null,null,null);t.default=r.exports}}]);